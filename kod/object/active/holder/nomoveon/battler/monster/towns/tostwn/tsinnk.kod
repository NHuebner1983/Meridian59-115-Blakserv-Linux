// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
TosInnKeeper is TosTown

constants:

   include blakston.khd

   PADDOCK_YELL_CHANCE = 30

resources:

   include tsinnk.lkod

   tosinnkeeper_name_rsc = "Paddock"
   tosinnkeeper_icon_rsc = tsinnk.bgf
   tosinnkeeper_desc_rsc = \
      "As owner of perhaps the most popular bar in the world, Paddock goes "
      "out of his way to smile at every customer who comes through the "
      "door.  His down to earth demeanor and common man approach to his "
      "clientele makes him one of the most likeable men in Tos."

   TsIK_entry_welcome = \
      "Welcome to Familiars, the most popular bar in the land!"

   TsIK_purplemushroom_sale = \
      "Yeah, I got %s%s here. Let's see what kind of deal I can make "
      "with you for these little rarities."
   TsIK_orcteeth_sale = \
      "Another customer in the market for %s%s?  I should shut down "
      "the bar and just sell these things."

   TsIK_watch_head = "Hey, %s%s!  Watch your head!"

classvars:

   vrName = tosinnkeeper_name_rsc
   vrIcon = tosinnkeeper_icon_rsc
   vrDesc = tosinnkeeper_desc_rsc
   viAttributes = \
      MOB_NOFIGHT | MOB_RECEIVE | MOB_RANDOM | MOB_LISTEN | MOB_NOMOVE \
      | MOB_SELLER | MOB_COND_SELLER | MOB_LAWFUL
   viOccupation = MOB_ROLE_INNKEEPER
   viMerchant_markup = MERCHANT_DISCOUNT

properties:

	// Wandering NPC teleport timers
	ptMiriana = $
	ptParrin = $
	ptMaleval = $
	ptIzzio = $
	ptTendrath = $
	
	iWandererWait = 30000
	iWandererWaitMax = 120000
	
	iWandererHangAround = 120000
	iWandererHangAroundMax = 360000
	
	oMiriana = $
	oParrin = $
	oMaleval = $
	oIzzio = $
	oTendrath = $
		
messages:

	StartWandererTimer(sWanderer = $)
	{
		if sWanderer = $
		{
			return;
		}
		
		if StringContain(sWanderer, "Miriana") AND ptMiriana = $
		{
			ptMiriana = CreateTimer(self, @MirianaTimer, Random(iWandererWait, iWandererWaitMax));
		}
		if StringContain(sWanderer, "Izzio") AND ptIzzio = $
		{
			ptIzzio = CreateTimer(self, @IzzioTimer, Random(iWandererWait, iWandererWaitMax));
		}
		if StringContain(sWanderer, "Tendrath") AND ptTendrath = $
		{
			ptTendrath = CreateTimer(self, @TendrathTimer, Random(iWandererWait, iWandererWaitMax));
		}
		if StringContain(sWanderer, "Maleval") AND ptMaleval = $
		{
			ptMaleval = CreateTimer(self, @MalevalTimer, Random(iWandererWait, iWandererWaitMax));
		}
		if StringContain(sWanderer, "Parrin") AND ptParrin = $
		{
			ptParrin = CreateTimer(self, @ParrinTimer, Random(iWandererWait, iWandererWaitMax));
		}
		
		return;
	}
	
	MirianaTimer()
	{
		ptMiriana = $;
		
		oMiriana = Create(&Heretic);
		
		Send(poOwner,@NewHold,#what=oMiriana,#new_row=7,#new_col=9,#fine_row=16,#fine_col=0);

		ptMiriana = CreateTimer(self, @MirianaHangAroundTimer, Random(iWandererHangAround, iWandererHangAroundMax));
		
		return;
	}
	MirianaHangAroundTimer()
	{
		ptMiriana = $;
		
		if oMiriana <> $
		{
			Send(oMiriana,@Delete);
		}
		
		return;
	}
	MalevalTimer()
	{
		ptMaleval = $;
		
		oMaleval = Create(&DarkWizard);
		
		Send(poOwner,@NewHold,#what=oMaleval,#new_row=3,#new_col=10,#fine_row=18,#fine_col=46);
			
		ptMaleval = CreateTimer(self, @MalevalHangAroundTimer, Random(iWandererHangAround, iWandererHangAroundMax));
		
		return;
	}
	MalevalHangAroundTimer()
	{
		ptMaleval = $;
		
		if oMaleval <> $
		{
			Send(oMaleval,@Delete);
		}
		
		return;
	}
	ParrinTimer()
	{
		ptParrin = $;
		
		oParrin = Create(&Minstrel);
		
		Send(poOwner,@NewHold,#what=oParrin,#new_row=6,#new_col=5,#fine_row=43,#fine_col=29);
			
		ptParrin = CreateTimer(self, @ParrinHangAroundTimer, Random(iWandererHangAround, iWandererHangAroundMax));
		
		return;
	}
	ParrinHangAroundTimer()
	{
		ptParrin = $;
		
		if oParrin <> $
		{
			Send(oParrin,@Delete);
		}
		
		return;
	}
	IzzioTimer()
	{
		ptIzzio = $;
		
		oIzzio = Create(&Izzio);
		
		Send(poOwner,@NewHold,#what=oIzzio,#new_row=6,#new_col=9,#fine_row=11,#fine_col=61);
			
		ptIzzio = CreateTimer(self, @IzzioHangAroundTimer, Random(iWandererHangAround, iWandererHangAroundMax));
		
		return;
	}
	IzzioHangAroundTimer()
	{
		ptIzzio = $;
		
		if oIzzio <> $
		{
			Send(oIzzio,@Delete);
		}
		
		return;
	}
	TendrathTimer()
	{
		ptTendrath = $;
		
		oTendrath = Create(&HunterGhost);
		
		Send(poOwner,@NewHold,#what=oTendrath,#new_row=1,#new_col=6,#fine_row=56,#fine_col=45);
			
		ptTendrath = CreateTimer(self, @TendrathHangAroundTimer, Random(iWandererHangAround, iWandererHangAroundMax));
		
		return;
	}
	TendrathHangAroundTimer()
	{
		ptTendrath = $;
		
		if oTendrath <> $
		{
			Send(oTendrath,@Delete);
		}
		
		return;
	}	
	
   AffectMood(why=$,what=$)
   {
      if why = MOODMOD_FACTION_CHANGE
      {
         if what = FACTION_DUKE
         {
            Send(self,@SetMood,#new_mood=piMood+2);

            return;
         }

         if what = FACTION_PRINCESS
         {
            Send(self,@SetMood,#new_mood=piMood-4);

            return;
         }
      }

      if why = MOODMOD_SELL_ITEM
      {
         if IsClass(what,&Food)
         {
            if Send(what,@IsAlcohol)
            {
               Send(self,@SetMood,#new_mood=piMood+1);
            }
         }

         return;
      }

      if why = MOODMOD_DAWN
      {
         Send(self,@SetMood,#new_mood=piMood-3);

         return;
      }

      if why = MOODMOD_DUSK
      {
         Send(self,@SetMood,#new_mood=piMood+3);

         return;
      }

      return;
   }

   SetForSale()
   {
      plFor_sale = [ 
         [
            Create(&InkyCap,#number=5),
            Create(&Mug)
         ],
      $,$,$];

      return;
   }

   InitCondSale()
   {
      local oObj,oObj2;

      oObj=Create(&PurpleMushroom,#number=4);
      Send(Send(SYS,@GetLibrary),@AddToMobLib,#mob=self,
            #triggers=[Send(oObj,@GetName)],
            #action=[LIBACT_CONDITIONAL,oObj,250,TsIK_purplemushroom_sale]);

      oObj2=Create(&OrcTooth,#number=2);
      Send(Send(SYS,@GetLibrary),@AddToMobLib,#mob=self,
            #triggers=[Send(oObj2,@GetName)],
            #action=[LIBACT_CONDITIONAL,oObj2,650,TsIK_orcteeth_sale]);

      return;
   }

   UserEntered(who=$)
   {
      if Send(who,@GetAction) = UA_HAPPY
      {
         Send(self,@SetMood,#new_mood=piMood+1);
      }
      
      if Send(who,@GetAction) = UA_SAD
      {
         Send(self,@SetMood,#new_mood=piMood-1);
      }
      
      Post(who,@SomeoneSaid,#what=self,
            #string=TsIK_entry_welcome,#type=SAY_RESOURCE);

      propagate;
   }

	SomeoneSaid(what = $,type = $,string = $)
	{
		local sSayMessage;
		
		if NOT IsClass(what,&User)
		{
			propagate;
		}
		
		sSayMessage = CreateString();
		
		if StringContain(string,"Miriana")
		{
			ClearTempString();
			AppendTempString("I think ~BMiriana~B should be prancing by here any time now. You know, someone should really buy her some shoes.");
			setString(sSayMessage,GetTempString());
			Post(what,@SomeoneSaid,#what=self,#string=sSayMessage,#type=SAY_NORMAL);
			ClearTempString();
			
			Send(self,@StartWandererTimer,#sWanderer="Miriana");
			
			propagate;
		}
		
		if StringContain(string,"Izzio")
		{
			ClearTempString();
			AppendTempString("~BIzzio~B is finishing up a few deals and will be headed this way shortly. Any friend of Izzio, is a friend of mine. After all, I do stock up on his inky-cap mushrooms any time I bump into him.");
			setString(sSayMessage,GetTempString());
			Post(what,@SomeoneSaid,#what=self,#string=sSayMessage,#type=SAY_NORMAL);
			ClearTempString();

			Send(self,@StartWandererTimer,#sWanderer="Izzio");
			
			propagate;
		}

		if StringContain(string,"Maleval")
		{
			ClearTempString();
			AppendTempString("That weird ~Bwizard~B is lurking in the shadows somewhere in the lands, but knowing him he'll be by here soon. I know because I caught him trying to steal an alley cat out back. He's probably making an army of evil felines to wipe out the Kriipa population in Ko'catan.");
			setString(sSayMessage,GetTempString());
			Post(what,@SomeoneSaid,#what=self,#string=sSayMessage,#type=SAY_NORMAL);
			ClearTempString();

			Send(self,@StartWandererTimer,#sWanderer="Maleval");

			propagate;
		}
		
		if StringContain(string,"Tendrath")
		{
			ClearTempString();
			AppendTempString("~BTendrath~B drifts by now and then. If you hang around for a minute or two you might catch him.");
			setString(sSayMessage,GetTempString());
			Post(what,@SomeoneSaid,#what=self,#string=sSayMessage,#type=SAY_NORMAL);
			ClearTempString();

			Send(self,@StartWandererTimer,#sWanderer="Tendrath");

			propagate;
		}
		
		if StringContain(string,"Parrin")
		{
			ClearTempString();
			AppendTempString("Oh boy, Parrin has the best voice in the land. I hire him regularly to sing for my customers. He should be here for a jig in just a little bit.");
			setString(sSayMessage,GetTempString());
			Post(what,@SomeoneSaid,#what=self,#string=sSayMessage,#type=SAY_NORMAL);
			ClearTempString();

			Send(self,@StartWandererTimer,#sWanderer="Parrin");

			propagate;
		}
		
		propagate;
	}
   
   SomethingMoved(what=$,new_row=$,new_col=$,fine_row=FINENESS_HALF,
                  fine_col=FINENESS_HALF)
   {
      // Give a warning for people going up the stairs to watch their head.
      // Something goofy that Rob suggested.  Blame him.
      if new_row = 2 AND (new_col = 8 OR (new_col = 7 AND fine_col > 20))
         AND Random(0,100) < PADDOCK_YELL_CHANCE
      {
         Send(poOwner,@SomeoneSaid,#what=self,#string=TsIK_watch_head,
               #type=SAY_RESOURCE,
               #parm1=Send(what,@GetIndef),#parm2=Send(what,@GetName));
      }

      propagate;
   }

end
////////////////////////////////////////////////////////////////////////////////
