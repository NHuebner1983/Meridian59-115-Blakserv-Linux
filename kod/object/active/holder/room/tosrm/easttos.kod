// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
EastTos is TosRoom

constants:

   include blakston.khd

resources:

   include easttos.lkod

   room_EastTos = toseast.roo
   name_EastTos = "East Ende"

   EastTos_music = tos.ogg
   wind_sound_easttos = ambcntry.ogg
   wind1_sound_easttos = rs_wind.ogg

classvars:

   vrName = name_EastTos
   viPermanent_flags = ROOM_GUILD_PK_ONLY | ROOM_LAMPS
   viTerrain_Type = TERRAIN_CITY | TERRAIN_ROAD

   viTeleport_row = 28
   viTeleport_col = 9

   viWeatherMask = WEATHER_MASK_DEFAULT

properties:

   prRoom = room_EastTos
   piRoom_num = RID_TOS_EAST

   prMusic = EastTos_music

   piBaseLight = LIGHT_NICE

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   pbSnowGroundTexture = TRUE

messages:


   CreateStandardExits()
   {
      plExits = $;
      
	  // Adventurer's Hall
      plExits = Cons([ 40, 8, RID_TOS_HALL, 9, 2, ROTATE_NONE ],plExits);
	  
	  // Bank
      plExits = Cons([ 19, 7, RID_TOS_BANK, 6, 8, ROTATE_NONE ],plExits);
	  plExits = Cons([ 18, 7, RID_TOS_BANK, 6, 8, ROTATE_NONE ],plExits);
	  
	  // Guild Hall (Near Bank)
      plExits = Cons([ 7, 34, RID_GUILDH5, 32, 17, ROTATE_NONE ],plExits);
      plExits = Cons([ 7, 35, RID_GUILDH5, 32, 17, ROTATE_NONE ],plExits);

 	  // Guild Hall (Near Badlands)
      plExits = Cons([ 26, 51, RID_GUILDH5, 32, 17, ROTATE_NONE ],plExits);
      plExits = Cons([ 27, 51, RID_GUILDH5, 32, 17, ROTATE_NONE ],plExits);
      plExits = Cons([ 28, 51, RID_GUILDH5, 32, 17, ROTATE_NONE ],plExits);
      plExits = Cons([ 29, 51, RID_GUILDH5, 32, 17, ROTATE_NONE ],plExits);

	  // Streets of Tos
	  plExits = Cons([ 29, 3, RID_TOS, 56, 39, ROTATE_NONE ],plExits);
	  plExits = Cons([ 28, 3, RID_TOS, 56, 39, ROTATE_NONE ],plExits);

	  // Main Arena Entrance
      plExits = Cons([ 28, 25, RID_TOS_ARENA2, 27, 27, ROTATE_NONE ],plExits);
      plExits = Cons([ 29, 25, RID_TOS_ARENA2, 27, 27, ROTATE_NONE ],plExits);

	  // Arena Entrance near Badlands
      plExits = Cons([ 40, 35, RID_TOS_ARENA2, 37, 37, ROTATE_NONE ],plExits);
      plExits = Cons([ 40, 36, RID_TOS_ARENA2, 37, 37, ROTATE_NONE ],plExits);

	  // Arena Entrance near Guild Hall
      plExits = Cons([ 17, 35, RID_TOS_ARENA2, 16, 37, ROTATE_NONE ],plExits);
      plExits = Cons([ 17, 36, RID_TOS_ARENA2, 16, 37, ROTATE_NONE ],plExits);

      plEdge_Exits = $;
	  
	  // Exit to Badlands
      plEdge_Exits = Cons([ LEAVE_SOUTH, RID_I6, 1, 47, ANGLE_SOUTH ], plEdge_exits); 

      propagate;
   }

   CreateStandardObjects()
   {
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=24,#new_col=9);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=24,#new_col=19);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=30,#new_col=9);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=30,#new_col=19);

      Send(self,@NewHold,#what=Create(&Lamp),#new_row=13,#new_col=35);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=13,#new_col=38);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=16,#new_col=46);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=29,#new_col=49);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=24,#new_col=49);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=37,#new_col=46);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=40,#new_col=35);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=40,#new_col=38);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=37,#new_col=27);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=28,#new_col=24);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=25,#new_col=24);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=16,#new_col=27);

      Send(self,@NewHold,#what=Create(&Lamp),#new_row=46,#new_col=35);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=46,#new_col=38);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=51,#new_col=35,
           #fine_col=16);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=51,#new_col=38,
           #fine_col=48);

      Send(self,@NewHold,#what=Create(&Lamp),#new_row=3,#new_col=9);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=3,#new_col=13);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=3,#new_col=18);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=3,#new_col=25);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=2,#new_col=30);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=3,#new_col=36);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=3,#new_col=39,
           #fine_row=0);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=3,#new_col=43,
           #fine_row=0);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=3,#new_col=50);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=3,#new_col=54);

      Send(self,@NewHold,#what=Create(&Lamp),#new_row=45,#new_col=4);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=38,#new_col=3);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=35,#new_col=4);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=30,#new_col=4);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=22,#new_col=4,
           #fine_row=0);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=17,#new_col=3);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=10,#new_col=3);
      Send(self,@NewHold,#what=Create(&Lamp),#new_row=3,#new_col=4);


      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=25,#new_col=13);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=29,#new_col=13);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=18,#new_col=21);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=34,#new_col=21);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=10,#new_col=31);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=10,#new_col=43);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=44,#new_col=31);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=44,#new_col=43);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=7,#new_col=10);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=10,#new_col=13);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=9,#new_col=16);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=14,#new_col=19);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=14,#new_col=13);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=19,#new_col=11);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=17,#new_col=16);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=37,#new_col=10);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=36,#new_col=17);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=38,#new_col=13);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=41,#new_col=10);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=40,#new_col=18);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=44,#new_col=22);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=44,#new_col=17);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=43,#new_col=12);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=8,#new_col=51);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=11,#new_col=49);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=46,#new_col=45);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_OAK,#bottom=TREE_ELM),
           #new_row=42,#new_col=50);

      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=25,#new_col=10,#new_angle=ANGLE_SOUTH);
      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=25,#new_col=16,#new_angle=ANGLE_SOUTH);
      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=29,#new_col=10,#new_angle=ANGLE_SOUTH);
      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=29,#new_col=16,#new_angle=ANGLE_SOUTH);

      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=35,#new_col=8,#new_angle=ANGLE_SOUTH);
      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=40,#new_col=8,#new_angle=ANGLE_SOUTH);
      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=47,#new_col=8,#new_angle=ANGLE_SOUTH);
      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=47,#new_col=14,#new_angle=ANGLE_SOUTH);
      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=47,#new_col=19,#new_angle=ANGLE_SOUTH);
      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=47,#new_col=25,#new_angle=ANGLE_SOUTH);
      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=47,#new_col=34,#new_angle=ANGLE_SOUTH);
      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=17,#new_col=8,#new_angle=ANGLE_SOUTH);
      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=12,#new_col=8,#new_angle=ANGLE_SOUTH);
      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=7,#new_col=8,#new_angle=ANGLE_SOUTH);
      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=7,#new_col=14,#new_angle=ANGLE_SOUTH);
      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=7,#new_col=19,#new_angle=ANGLE_SOUTH);
      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=7,#new_col=25,#new_angle=ANGLE_SOUTH);
      Send(self,@NewHold,#what=Create(&Shrub),
           #new_row=7,#new_col=34,#new_angle=ANGLE_SOUTH);

     propagate;
   }

   Constructed()
   {
      //  each sound is [wave_file, row, col, cutoff radius, maximum volume]
      plLooping_sounds = [[ wind_sound_easttos, 1, 1, 200, 100 ]];

      propagate;
   }

   CreatePeriodicSounds()
   {
      plPeriodic_sounds = [ wind1_sound_easttos ];
      pbPeriodic_sound_random_location = TRUE;

      propagate;
   }


end
////////////////////////////////////////////////////////////////////////////////
