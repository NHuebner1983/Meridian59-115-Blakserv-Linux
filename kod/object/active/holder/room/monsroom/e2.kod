// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
OutdoorsE2 is MonsterRoom

constants:

   include blakston.khd

resources:

   include e2.lkod

   room_name_OutdoorsE2 = "The Great Ocean"
   room_OutdoorsE2 = e2.roo
   OutdoorsE2_music = walk7.ogg

   E2_oceanwalk = \
      "You decide you don't like saltwater enough to go swimming "
      "in the Great Ocean."
   E2_icewalk = "The ice looks a bit too thin to risk going any farther out."

classvars:

   vrName = room_name_OutdoorsE2

   viTeleport_row = 19
   viTeleport_col = 32

   viTerrain_type = TERRAIN_FOREST | TERRAIN_BEACH

   viFlag_row = 63
   viFlag_col = 5

   viWeatherZone = WEATHER_ZONE_BARLOQUE

properties:

   prRoom = room_OutdoorsE2
   prMusic = OutdoorsE2_music
   piRoom_num = RID_E2

   piBaseLight = LIGHT_NICE
   piOutside_factor = 8

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   pbSnowGroundTexture = TRUE

   piGen_time = 20000
   piGen_percent = 100

   piInit_count_min = 3
   piInit_count_max = 5
   piMonster_count_max = 15

messages:

   Constructed()
   {
      plMonsters = [ [&MolluskMonster, 100] ];

      plGenerators = [ [40, 6], [45, 13], [58, 28], [34, 34], [32, 53],
                       [53, 50], [40, 67], [14, 66], [15, 46], [4, 68] ];

      propagate;
   }

   CreateStandardExits()
   {
      plEdge_Exits = $;
      plEdge_Exits = Cons([LEAVE_EAST, RID_F2, 21, 3, ROTATE_NONE], plEdge_exits);
      plEdge_Exits = Cons([LEAVE_SOUTH, RID_D4, 1, 23, ROTATE_NONE], plEdge_exits);

      propagate;
   }

   StandardLeaveDir(what = $,dir = $,pos = $,new_room_num = $)
   {
      if (dir = LEAVE_NORTH)
      {
         if (IsClass(what,&Player))
         {
            if Send(self,@CheckRoomFlag,#flag=ROOM_SNOWING)
               AND pbSnowGroundTexture
            {
               Send(what,@MsgSendUser,#message_rsc=E2_icewalk);
            }
            else
            {
               Send(what,@MsgSendUser,#message_rsc=E2_oceanwalk);
            }
         }

         return;
      }

      propagate;
   }

   CreateStandardObjects()
   {
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
           #new_row=58,#new_col=33);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
           #new_row=58,#new_col=51);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
           #new_row=57,#new_col=54);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
           #new_row=52,#new_col=52);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
           #new_row=40,#new_col=54);
      Send(self,@NewHold,#what=Create(&Tree,#top=TREE_PINE,#bottom=TREE_PINE),
           #new_row=40,#new_col=71);

      propagate;
   }

end
////////////////////////////////////////////////////////////////////////////////
