// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
//
//
// Damion Schubert, November 1996

KraananCharm is Necklace

constants:

   include blakston.khd

   MIGHT_CHANGE = 5
   AGILITY_CHANGE = 2

resources:

   include krcharm.lkod

   KraananCharm_name_rsc = "steel torc"
   KraananCharm_icon_rsc = krcharm.bgf
   KraananCharm_desc_rsc = \
      "Made not for ornamentation but for protection, this torc looks more "
      "than suitable for stopping any blow headed towards the throat."
   KraananCharm_whisper = \
      "You hear a voice whisper, \"~I...dodge all they want, a mighty "
      "warrior need only hit them once...\""

classvars:

   vrName = KraananCharm_name_rsc
   vrIcon = KraananCharm_icon_rsc
   vrDesc = KraananCharm_desc_rsc

   viValue_average = 500

   viBulk = 20
   viWeight = 25
   viMax_Disp_hits = 5

   viGround_group = 2

properties:

   pbIn_use = FALSE

   piMight_change = MIGHT_CHANGE
   piAgility_change = AGILITY_CHANGE

   piDisp_hits = 0

messages:

   Constructor()
   {
      piDisp_hits = viMax_disp_hits;

      propagate;
   }

   NewOwner()
   {
      piDisp_hits = viMax_disp_hits;

      propagate;
   }

   NewUsed(what = $)
   "When the charm is put on, the wearer gets a moderate bonus to both "
   "might and Agility."
   {
      piAgility_change = Send(what,@AddAgility,#points=AGILITY_CHANGE);
      piMight_change = Send(what,@AddMight,#points=MIGHT_CHANGE);

      if Random(1,5) = 3   /// 20// chance
      {
         Send(what,@MsgSendUser,#message_rsc=KraananCharm_whisper);
      }

      propagate;
   }

   NewUnused(what = $)
   "When something that can break the curse unuses the item"
   {
      Send(what,@AddAgility,#points=-piAgility_change);
      Send(what,@AddMight,#points=-piMight_change);

      propagate;
   }

   DestroyDisposable()
   {
      if piDisp_Hits = 0
      {
         Send(self,@Delete);

         return;
      }
      --piDisp_hits;

      return;
   }

   GetMinimapDotFlags()
   {
      // Special item, add minimap dot.
      return MM_RARE_ITEM;
   }

end
////////////////////////////////////////////////////////////////////////////////
