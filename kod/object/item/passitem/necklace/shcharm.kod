// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
//
// Damion Schubert, November 1996

ShalilleCharm is Necklace

constants:

   include blakston.khd

   INTELLECT_CHANGE = 5
   STAMINA_CHANGE = 2

resources:

   include shcharm.lkod

   ShalilleCharm_name_rsc = "diamond pendant"
   ShalilleCharm_icon_rsc = shcharm.bgf
   ShalilleCharm_desc_rsc = \
   "Made of carefully cut diamonds set in finely worked copper, this pendant "
   "would be anyone's best friend."

   ShalilleCharm_whisper = \
      "A voice whispers, \"~I...calm only prevails if it learns from "
      "its travails...\""

classvars:

   vrName = ShalilleCharm_name_rsc
   vrIcon = ShalilleCharm_icon_rsc
   vrDesc = ShalilleCharm_desc_rsc

   viValue_average = 500

   viBulk = 20
   viWeight = 25
   viMax_Disp_hits = 5

   viGround_group = 2

properties:

   pbIn_use = FALSE

   piIntellect_change = INTELLECT_CHANGE
   piStamina_change = STAMINA_CHANGE

   piDisp_hits = 0

messages:

   Constructor()
   {
      piDisp_hits = viMax_disp_hits;

      propagate;
   }

   NewOwner()
   {
      piDisp_hits = viMax_disp_hits;

      propagate;
   }

   NewUsed(what = $)
   "When the charm is put on, the wearer gets a moderate bonus to both "
   "Intellect and Stamina."
   {
      piStamina_change = Send(what,@AddStamina,#points=STAMINA_CHANGE);
      piIntellect_change = Send(what,@AddIntellect,#points = INTELLECT_CHANGE);

      if Random(1,5) = 3   /// 20// chance
      {
         Send(what,@MsgSendUser,#message_rsc=ShalilleCharm_whisper);
      }

      propagate;
   }

   NewUnused(what = $)
   "When something that can break the curse unuses the item"
   {
      Send(what,@AddStamina,#points=-piStamina_change);
      Send(what,@AddIntellect,#points=-piIntellect_change);

      propagate;
   }

   DestroyDisposable()
   {
      if piDisp_Hits = 0
      {
         Send(self,@Delete);

         return;
      }
      --piDisp_hits;

      return;
   }

   GetMinimapDotFlags()
   {
      // Special item, add minimap dot.
      return MM_RARE_ITEM;
   }

end
////////////////////////////////////////////////////////////////////////////////
