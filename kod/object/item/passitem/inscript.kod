// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
InscriptionItem is PassiveItem

constants:

   include blakston.khd

resources:

   include inscript.lkod

   inscript_name_rsc = "slip of parchment"
   inscript_icon_rsc = scroll.bgf
   inscript_desc_blank_rsc = \
      "A fresh bit of parchment paper, without a mark on it."
   inscript_desc_written_rsc = \
      "A small sheet of parchment paper, with something scrawled across it."
   inscript_emote_write_third_rsc = "%s scribbles something on %s%s."
   inscript_blank_rsc = ""
   inscript_q = "%q"

classvars:

   vrName = inscript_name_rsc
   vrIcon = inscript_icon_rsc
   vrDesc = inscript_desc_blank_rsc

   viUse_type = ITEM_SINGLE_USE
   viUse_amount = 1

properties:

   psInscription = $
   poLastInscriber = $

messages:

   CanEditInscription()
   {
      return TRUE;
   }

   HasInscription()
   {
      return TRUE;
   }

   SetInscription(string = $)
   "Admin supported."
   {
      if (string = GetTempString())
      {
         psInscription = SetString($,string);
      }
      else
      {
         psInscription = string;
      }

      poLastInscriber = poOwner;

      return psInscription;
   }

   ReqNewApply()
   {
      local oOwner;

      oOwner=Send(self,@GetOwner);

      if IsClass(self,&BallotItem)
         OR IsClass(self,&Book)
         OR IsClass(self,&NameChangeScroll)
      {
         return FALSE;
      }

      if IsClass(oOwner,&DM)
      {
         return TRUE;
      }

      return FALSE;
   }

   NewApplied()
   {
      local oOwner;

      if psInscription = $
      {
         return;
      }

      oOwner = Send(self,@GetOwner);
      if IsClass(oOwner,&DM)
      {
         Send(oOwner,@NewHold,#what=Create(&BardLetter,#desc=psInscription));
         Send(self,@Delete);
      }

      return;
   }

   GetInscription()
   {
      return psInscription;
   }

   ShowInscription()
   {
      if (psInscription)
      {
         AddPacket(4, inscript_q);
         AddPacket(0, psInscription);
      }
      else
      {
         AddPacket(4, inscript_blank_rsc);
      }

      return;
   }

   ShowDesc()
   {
      if (psInscription)
      {
         AddPacket(4, inscript_desc_written_rsc);
      }
      else
      {
         AddPacket(4, inscript_desc_blank_rsc);
      }

      return;
   }

end
////////////////////////////////////////////////////////////////////////////////
