// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


/////////////////////////////////////////////////////////////////////////////////
ShalDiscQuest is QuestTemplate
// Quest nodes 12, 13, 14.
// QNT_ID_SHAL_DISCIPLE_ONE, QNT_ID_SHAL_DISCIPLE_TWO, QNT_ID_SHAL_DISCIPLE_THREE

// QuestTemplate is
// [ quest template index
//   quest template object
//   number of players,
//   type of quest,
//   eligible player restrictions,
//   quest nodes,
//   max number active,
//   currently active quests,
//   percent chance of scheduling (on timer firing)
//   special restrictions ]

constants:

   include blakston.khd

resources:

   include shaldiscqt.lkod

   // Quest description.
   shalquest_icon_rsc = rescuico.bgf
   shalquest_name_rsc = "Shal'ille disciple quest"
   shalquest_desc_rsc = \
      "Priestess Xiana has asked you to go to %s and speak "
      "the words: \"The ways of violence and destruction have hardened our "
      "people.  It is time to move towards gentleness and peace.  I will "
      "begin this process by granting forgiveness for your deeds.  Please "
      "accept my blessing.\".  Return when you have completed this task."

   shalquest_node_three_rsc = \
      "Return to Priestess Xiana and let her know the task has been "
      "completed."

   shalquest_completed = \
      "You have completed the Shal'ille disciple quest.  You are a faithful "
      "disciple of Shal'ille, and Priestess Xiana will now teach you more "
      "powerful spells."

   // Quest resources.
   shalilledisciple_trigger = "granting forgiveness for your deeds"
   shalilledisciple_assign = \
      "`bYou wish to learn more of the gentle, healing ways of our good Lady.  "
      "You must brave the temple of %NPC, and proclaim your willingness to "
      "forgive their violence and brutality. Heal them if you can.  Say, \"The "
      "ways of violence and destruction have hardened our people.  It is time "
      "to move towards gentleness and peace.  I will begin this process by "
      "granting forgiveness for your deeds.  Please accept my blessing.\"  "
      "Then, return and tell me that you have done as I asked."
   shalilledisciple_success = \
      "`bBlessed be this day. Today there is the birth of another soul "
      "filling with the light of Shal'ille.  Seek me when you are ready to "
      "learn more of the Blessed Mother's knowledge and spells.  "
      "You are worthy."
   shalilledisciple_failure = \
      "Subject: Keep heart, child of Shal'ille\n"
         "Failure is part of life.  Search your heart and find the blemish.  "
         "Please return to me and then we will begin our journey down the "
         "road to harmony once again."

   shaldisc_qorpr_resp = \
      "~kPriestess Zuxana says, \"~r~IYes, I suppose it is time for Qor to seek "
      "redemption.  You are the key to her salvation.  Join our fold and "
      "together we can begin the path towards malumnea.~I~k\""
   shaldisc_farenpr_resp = \
      "~kPriestess Tenuv'vyal says, \"~B~gHow dare you presume to forgive of "
      "Lord Faren.  Leave!~B~k\""
   shaldisc_kranpr_resp = \
      "~kPriestess Qerti'nya says, \"~B~bLittle Xiana seeks to train another "
      "student.  Very well, you have delivered your message.  You may now "
      "return to her.~B~k\""
   shaldisc_duke_resp = \
      "~kDuke Akardius laughs and says, \"~B~bSurely you cannot be serious?  "
      "I do not need forgiveness.  Crawl back to your temple, your deed is "
      "done.~B~k\""

classvars:

   vrIcon = shalquest_icon_rsc
   vrName = shalquest_name_rsc
   vrDesc = shalquest_desc_rsc

   vrNodeTwo = shalquest_desc_rsc
   vrNodeThree = shalquest_node_three_rsc
   vrCompleted = shalquest_completed

   // The QST_ID constant for this quest.
   viQuestID = QST_ID_SHALILLE_DISCIPLE

properties:

   piNumPlayers = 1
   piPlayerRestrict = Q_PLAYER_NOTSUCCEEDED | Q_PLAYER_NOTFAILED_RECENTLY
   plSpecialRestrict = $
   piMaxPlayers = 30
   piSchedulePct = 100
   piTimeLimit = 3 * 3600 // 3 hours.

messages:

   Constructor()
   {
      // Quest node list to send to QuestEngine.
      plQuestNodes = [QNT_ID_SHAL_DISCIPLE_ONE, QNT_ID_SHAL_DISCIPLE_TWO,
                      QNT_ID_SHAL_DISCIPLE_THREE];

      // Quest nodes with matching descriptions for the player.
      // No description needed for quest node QNT_ID_SHAL_DISCIPLE_ONE.
      plQuestNodeDesc = [ [QNT_ID_SHAL_DISCIPLE_TWO, vrNodeTwo],
                          [QNT_ID_SHAL_DISCIPLE_THREE, vrNodeThree] ];

      propagate;
   }

   SendQuestNodeTemplates()
   {
      local lNPCs, oQE, oLib;

      oQE = Send(SYS,@GetQuestEngine);
      oLib = Send(SYS,@GetLibrary);

      // Template #12 is shal'ille disciple quest kickoff, "disciple"
      // QNT_ID_SHAL_DISCIPLE_ONE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #cargolist=[disciple_trigger],
               #quest_node_index=QNT_ID_SHAL_DISCIPLE_ONE)
      {
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_SHAL_DISCIPLE_ONE,
               #new_NPC_list=Send(oLib,@GetOccupationList,
                                    #cNPC_class=&ShalillePriestess));
      }
      else
      {
         Debug("Error building QN: QNT_ID_SHAL_DISCIPLE_ONE");
      }

      // Template #13 is shal'ille disciple quest, deliver message
      // QNT_ID_SHAL_DISCIPLE_TWO
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #cargolist=[shalilledisciple_trigger],#timelimit=piTimeLimit,
               #prizelist=[ [ QN_PRIZETYPE_NPC_RESPONSE ] ],
               #quest_node_index=QNT_ID_SHAL_DISCIPLE_TWO)
      {
         lNPCs = $;
         lNPCs = Cons(First(Send(oLib,@GetOccupationList,
                                 #cNPC_class=&QorPriestess)),lNPCs);
         lNPCs = Cons(First(Send(oLib,@GetOccupationList,
                                 #cNPC_class=&KraananPriestess)),lNPCs);
         lNPCs = Cons(First(Send(oLib,@GetOccupationList,
                                 #cNPC_class=&FarenPriestess)),lNPCs);
         lNPCs = Cons(First(Send(oLib,@GetOccupationList,
                                 #cNPC_class=&DukeLiege)),lNPCs);
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_SHAL_DISCIPLE_TWO,
               #new_NPC_list = lNPCs);
         Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_SHAL_DISCIPLE_TWO,
               #new_hint=shalilledisciple_assign);
         Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_SHAL_DISCIPLE_TWO,
               #new_hint=shalilledisciple_failure);
      }
      else
      {
         Debug("Error building QN: QNT_ID_SHAL_DISCIPLE_TWO");
      }

      // Template #14 is shal'ille disciple quest, come back
      // QNT_ID_SHAL_DISCIPLE_THREE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_SHOWUP,
               #timelimit=piTimeLimit,
               #quest_node_index=QNT_ID_SHAL_DISCIPLE_THREE)
      {
         Send(oQE,@SetQuestNodeNPCModifier,#index=QNT_ID_SHAL_DISCIPLE_THREE,
               #new_mod=QN_NPCMOD_PREVIOUS);
         Send(oQE,@SetQuestNodeSuccessHint,#index=QNT_ID_SHAL_DISCIPLE_THREE,
               #new_hint=shalilledisciple_success);
         Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_SHAL_DISCIPLE_THREE,
               #new_hint=shalilledisciple_failure);
      }
      else
      {
         Debug("Error building QN: QNT_ID_SHAL_DISCIPLE_THREE");
      }

      return;
   }

   ExtraDesc(index=$,oQuestNode=$)
   {
      if oQuestNode = $
         OR index = $
      {
         return;
      }

      // Quest node QNT_ID_SHAL_DISCIPLE_TWO dialog needs the NPC name.
      if index = QNT_ID_SHAL_DISCIPLE_TWO
      {
         AddPacket(4,Send(Send(oQuestNode,@GetDestNPC),@GetName));
      }

      return;
   }

   SendQuestResponse(recipients=$, index=$, oNPC=$)
   "Send different responses depending on the NPC."
   {
      if index = QNT_ID_SHAL_DISCIPLE_TWO
      {
         if IsClass(oNPC,&QorPriestess)
         {
            Post(Send(oNPC,@GetOwner),@SomeoneSaid,#what=oNPC,
                  #type=SAY_MESSAGE,#string=shaldisc_qorpr_resp);

            return;
         }

         if IsClass(oNPC,&KraananPriestess)
         {
            Post(Send(oNPC,@GetOwner),@SomeoneSaid,#what=oNPC,
                  #type=SAY_MESSAGE,#string=shaldisc_kranpr_resp);

            return;
         }

         if IsClass(oNPC,&FarenPriestess)
         {
            Post(Send(oNPC,@GetOwner),@SomeoneSaid,#what=oNPC,
                  #type=SAY_MESSAGE,#string=shaldisc_farenpr_resp);

            return;
         }

         if IsClass(oNPC,&DukeLiege)
         {
            Post(Send(oNPC,@GetOwner),@SomeoneSaid,#what=oNPC,
                  #type=SAY_MESSAGE,#string=shaldisc_duke_resp);

            return;
         }
      }

      return;
   }

end
/////////////////////////////////////////////////////////////////////////////////
