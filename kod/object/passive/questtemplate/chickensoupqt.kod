// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


/////////////////////////////////////////////////////////////////////////////////
ChickenSoupQuest is QuestTemplate
// Quest template QST_ID_CHICKEN_SOUP = 23
// Quest nodes 49, 50, 51.
// QNT_ID_CHICKEN_SOUP_ONE, QNT_ID_CHICKEN_SOUP_TWO, QNT_ID_CHICKEN_SOUP_THREE

// QuestTemplate is
// [ quest template index
//   quest template object
//   number of players,
//   type of quest,
//   eligible player restrictions,
//   quest nodes,
//   max number active,
//   currently active quests,
//   percent chance of scheduling (on timer firing)
//   special restrictions ]

constants:

   include blakston.khd

resources:

   include chickensoupqt.lkod

   // Quest description.
   chickensoupquest_icon_rsc = soupbowl.bgf
   chickensoupquest_name_rsc = "chicken soup quest"
   chickensoupquest_desc_rsc = \
      "Go to Widow Qesino and ask for some warm chicken soup for NPC."

   chickensoupquest_nodetwo_rsc = \
      "%s is feeling sick, and has asked if you could go to Widow Qesino "
      "and ask for a bowl of her special chicken soup."

   chickensoupquest_return_rsc = \
      "Return to %s and give %s the chicken soup."

   chickensoupquest_completed = \
      "You have completed the chicken soup quest, and received a reward "
      "for your generosity."

   // Quest resources.
   chickensoupquest_trigger_2 = "chicken soup"
   chickensoupquest_assign_2 = \
      "I'm feeling a little sick.  I don't suppose you could go to the "
      "Widow Qesino and ask her for a bowl of her special chicken soup, "
      "could you?  I'd be most grateful."
   chickensoupquest_failure_2 = \
      "Subject: Chicken soup\n"
      "Oh, well...  I guess you have better things to do than help me out.  "
      "That's ok, I'm getting over my cold anyway."
   chickensoupquest_assign_3 = \
      "Oh, of course, dear!  Here's a bowl of my special soup for %NPC.  "
      "Wish %HIMHER_NPC well for me."
   chickensoupquest_success_3 = \
      "Thanks so much, I feel better already just from smelling this "
      "delicious soup!  Here, take this %PRIZE as a token of my appreciation."
   chickensoupquest_failure_3 = \
      "Subject: %NPC's cold\n"
      "You ate that bowl of soup yourself, didn't you?  Shame on you, "
      "now, %NAME!  %NPC is sick after all, poor dear."

classvars:

   vrIcon = chickensoupquest_icon_rsc
   vrName = chickensoupquest_name_rsc
   vrDesc = chickensoupquest_desc_rsc

   vrNodeTwo = chickensoupquest_nodetwo_rsc
   vrNodeThree = chickensoupquest_return_rsc
   vrCompleted = chickensoupquest_completed

   // The QST_ID constant for this quest.
   viQuestID = QST_ID_CHICKEN_SOUP

   viIcon_Animation_start = 1

properties:

   piNumPlayers = 1
   piPlayerRestrict = Q_PLAYER_NOTTRIED_RECENTLY | Q_PLAYER_NEWBIE
   plSpecialRestrict = $
   piMaxPlayers = 20
   piSchedulePct = 100

messages:

   Constructor()
   {
      // Quest node list to send to QuestEngine.
      plQuestNodes = [QNT_ID_CHICKEN_SOUP_ONE,QNT_ID_CHICKEN_SOUP_TWO,
                      QNT_ID_CHICKEN_SOUP_THREE];

      // Quest nodes with matching descriptions for the player.
      plQuestNodeDesc = [ [QNT_ID_CHICKEN_SOUP_TWO, vrNodeTwo],
                          [QNT_ID_CHICKEN_SOUP_THREE, vrNodeThree] ];

      propagate;
   }

   SendQuestNodeTemplates()
   {
      local lNPCs, oQE, oLib, oNPC;

      oQE = Send(SYS,@GetQuestEngine);
      oLib = Send(SYS,@GetLibrary);

      // Template #49 is chicken soup quest kickoff
      // QNT_ID_CHICKEN_SOUP_ONE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_SHOWUP,
               #quest_node_index=QNT_ID_CHICKEN_SOUP_ONE)
      {
         lNPCs = $;
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&BarloqueTown)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&TosTown)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&MarionTown)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&CorNothTown)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_CHICKEN_SOUP_ONE,
               #new_NPC_list=lNPCs);
      }
      else
      {
         Debug("Error building QN: QNT_ID_CHICKEN_SOUP_ONE");
      }

      // Template #50 is chicken soup quest, say "chicken soup"
      // QNT_ID_CHICKEN_SOUP_TWO
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #cargolist=[ chickensoupquest_trigger_2 ],
               #timelimit=3600,#quest_node_index=QNT_ID_CHICKEN_SOUP_TWO)
      {
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_CHICKEN_SOUP_TWO,
               #new_NPC_list=Send(oLib,@GetOccupationList,
                                 #cNPC_class=&JasperInnKeeper));
         Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_CHICKEN_SOUP_TWO,
               #new_hint=chickensoupquest_assign_2);
         Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_CHICKEN_SOUP_TWO,
               #new_hint=chickensoupquest_failure_2);
      }
      else
      {
         Debug("Error building QN: QNT_ID_CHICKEN_SOUP_TWO");
      }

      // Template #51 is chicken soup quest, bring the soup back
      // QNT_ID_CHICKEN_SOUP_THREE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_ITEM,
               #NPC_modifier=QN_NPCMOD_PREVIOUS,
               #cargolist=[ [ QN_PRIZETYPE_ITEMCLASS, &ChickenSoup, 1 ] ],
               #prizelist=[ [ [ QN_PRIZETYPE_ITEMCLASS, &Hammer, 1 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &LongSword, 1 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &Axe, 1 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &ScaleArmor, 1 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &FireRing, 1 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &ColdRing, 1 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &ShockRing, 1 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &AcidRing, 1 ],
                              [ QN_PRIZETYPE_ITEMCLASS, &RingInvisibility, 1 ] ] ],
               #timelimit=3600,#quest_node_index=QNT_ID_CHICKEN_SOUP_THREE)
      {
         Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_CHICKEN_SOUP_THREE,
               #new_hint=chickensoupquest_assign_3);
         Send(oQE,@SetQuestNodeSuccessHint,#index=QNT_ID_CHICKEN_SOUP_THREE,
               #new_hint=chickensoupquest_success_3);
         Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_CHICKEN_SOUP_THREE,
               #new_hint=chickensoupquest_failure_3);
      }
      else
      {
         Debug("Error building QN: QNT_ID_CHICKEN_SOUP_THREE");
      }

      return;
   }

   ExtraDesc(index=$,oQuestNode=$)
   {
      local oNPC;

      if oQuestNode = $
         OR index = $
      {
         return;
      }

      if index = QNT_ID_CHICKEN_SOUP_TWO
      {
         oNPC = Send(oQuestNode,@GetSourceNPC);
         AddPacket(4,Send(oNPC,@GetName));

         return;
      }

      if index = QNT_ID_CHICKEN_SOUP_THREE
      {
         oNPC = Send(oQuestNode,@GetDestNPC);
         AddPacket(4,Send(oNPC,@GetName), 4,Send(oNPC,@GetHimHer));

         return;
      }

      return;
   }

end
/////////////////////////////////////////////////////////////////////////////////
