// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


/////////////////////////////////////////////////////////////////////////////////
PriestessInsigniaQuest is QuestTemplate
// Quest template QST_ID_PRIESTESS_INSIGNIA = 33.
// Quest nodes 100, 101, 102
// QNT_ID_PRIESTESS_INSIGNIA_ONE, QNT_ID_PRIESTESS_INSIGNIA_TWO,
// QNT_ID_PRIESTESS_INSIGNIA_THREE

// QuestTemplate is
// [ quest template index
//   quest template object
//   number of players,
//   type of quest,
//   eligible player restrictions,
//   quest nodes,
//   max number active,
//   currently active quests,
//   percent chance of scheduling (on timer firing)
//   special restrictions ]

constants:

   include blakston.khd

resources:

   include priestessinsigniaqt.lkod

   // Quest description.
   priestessinsigniaquest_icon_rsc = gsha.bgf
   priestessinsigniaquest_name_rsc = "herald shield insignia quest"
   priestessinsigniaquest_desc_rsc = \
      "The priestess will place their insignia on your shield, provided "
      "you offer them a \"tithe\"."

   priestessinsigniaquest_nodetwo_rsc = \
      "%s%s will place %s insignia on your herald shield, provided you "
      "offer %s a \"tithe\"."
   priestessinsigniaquest_nodethree_rsc = \
      "%s%s is interested in magical reagents from Ko'catan - if you bring "
      "%s %i %s, %s will place an insignia on your herald shield.  You "
      "should equip the shield you would like the insignia on, if you have "
      "more than one in your inventory."

   priestessinsigniaquest_completed_rsc = \
      "You have received an insignia on your herald shield, which adds "
      "more power to your spells when worn."

   // Quest resources.
   priestessinsignia_trigger = "insignia"
   priestessinsignia_assign_2 = \
      "~II see you have an unmarked shield.  I am more than willing to "
      "offer my insignia to a brave mage, provided they offer me a tithe.~I"
   priestessinsignia_trigger_2 = "tithe"
   priestessinsignia_assign_3 = \
      "~II have heard about a passage to another world opening up.  I am "
      "interested in the magical reagents from that land - perhaps their "
      "emergence will result in the strengthening of magic "
      "for faithmages like you and I.  Go and find me %CARGO.~I"
   priestessinsignia_success_3 = \
      "~IExcellent.  The Eternal thank you for your benevolence.~I"
   priestessinsignia_failure_3 = "Subject: Insignia\n"
      "I had thought so much better of you.  Oh, well.  I shall watch "
      "for a better crusader in the future."

classvars:

   vrIcon = priestessinsigniaquest_icon_rsc
   vrName = priestessinsigniaquest_name_rsc
   vrDesc = priestessinsigniaquest_desc_rsc

   vrNodeTwo = priestessinsigniaquest_nodetwo_rsc
   vrNodeThree = priestessinsigniaquest_nodethree_rsc

   vrCompleted = priestessinsigniaquest_completed_rsc

   // The QST_ID constant for this quest.
   viQuestID = QST_ID_PRIESTESS_INSIGNIA

   viIcon_Animation_start = 1

properties:

   piNumPlayers = 1
   piPlayerRestrict = Q_PLAYER_NOTTRIED_RECENTLY
   piMaxPlayers = 80
   piSchedulePct = 100
   piTimeLimit = 12 * 3600 // 12 hours.

messages:

   Constructor()
   {
      // Quest node list to send to QuestEngine.
      plQuestNodes = [QNT_ID_PRIESTESS_INSIGNIA_ONE,
                      QNT_ID_PRIESTESS_INSIGNIA_TWO,
                      QNT_ID_PRIESTESS_INSIGNIA_THREE];

      // Quest nodes with matching descriptions for the player.
      plQuestNodeDesc = [ [QNT_ID_PRIESTESS_INSIGNIA_TWO, vrNodeTwo],
                          [QNT_ID_PRIESTESS_INSIGNIA_THREE, vrNodeThree] ];

      plSpecialRestrict = [ [ Q_R2_HAS_ITEM, &GuildShield ] ];

      propagate;
   }

   SendQuestNodeTemplates()
   {
      local lNPCs, oNPC, oQE, oLib;

      oQE = Send(SYS,@GetQuestEngine);
      oLib = Send(SYS,@GetLibrary);

      // Template #100 is priestess insignia quest
      // QNT_ID_PRIESTESS_INSIGNIA_ONE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #cargolist=[ priestessinsignia_trigger ],
               #quest_node_index=QNT_ID_PRIESTESS_INSIGNIA_ONE)
      {
         lNPCs = $;
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&Temples,
                           #onIsland=FALSE)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&Minstrel)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_PRIESTESS_INSIGNIA_ONE,
               #new_NPC_list=lNPCs);
      }
      else
      {
         Debug("Error building QN: QNT_ID_PRIESTESS_INSIGNIA_ONE");
      }

      // Template #101 is priestess insignia quest
      // QNT_ID_PRIESTESS_INSIGNIA_TWO
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #NPC_modifier=QN_NPCMOD_SAME,#cargolist=[ priestessinsignia_trigger_2 ],
               #timelimit=60,#quest_node_index=QNT_ID_PRIESTESS_INSIGNIA_TWO)
      {
         Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_PRIESTESS_INSIGNIA_TWO,
               #new_hint=priestessinsignia_assign_2);
      }
      else
      {
         Debug("Error building QN: QNT_ID_PRIESTESS_INSIGNIA_TWO");
      }

      // Template #102 is priestess insignia quest
      // QNT_ID_PRIESTESS_INSIGNIA_THREE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_ITEMFINDCLASS,
               #NPC_modifier=QN_NPCMOD_SAME,#timelimit=piTimeLimit,
               #cargolist=[ [ QN_PRIZETYPE_ITEMCLASS, &KriipaClaw, 20 ],
                           [ QN_PRIZETYPE_ITEMCLASS, &PolishedSeraphym, 5 ],
                           [ QN_PRIZETYPE_ITEMCLASS, &DragonflyEye, 20 ],
                           [ QN_PRIZETYPE_ITEMCLASS, &ShamanBlood, 10 ] ],
               #prizelist=[ [ QN_PRIZETYPE_INSIGNIA ] ],
               #quest_node_index=QNT_ID_PRIESTESS_INSIGNIA_THREE)
      {
         Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_PRIESTESS_INSIGNIA_THREE,
               #new_hint=priestessinsignia_assign_3);
         Send(oQE,@SetQuestNodeSuccessHint,#index=QNT_ID_PRIESTESS_INSIGNIA_THREE,
               #new_hint=priestessinsignia_success_3);
         Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_PRIESTESS_INSIGNIA_THREE,
               #new_hint=priestessinsignia_failure_3);
      }
      else
      {
         Debug("Error building QN: QNT_ID_PRIESTESS_INSIGNIA_THREE");
      }

      return;
   }

   ExtraDesc(index=$,oQuestNode=$)
   {
      local iNum, oCargo, oNPC;

      if oQuestNode = $
         OR index = $
      {
         return;
      }

      oNPC = Send(oQuestNode,@GetSourceNPC);

      if oNPC = $
      {
         return;
      }

      if index = QNT_ID_PRIESTESS_INSIGNIA_TWO
      {
         AddPacket(4,Send(oNPC,@GetCapDef), 4,Send(oNPC,@GetName),
                   4,Send(oNPC,@GetHisHer),4,Send(oNPC,@GetHimHer));

         return;
      }

      oCargo = Send(oQuestNode,@GetCargo);
      if oCargo = $
      {
         return;
      }

      if index = QNT_ID_PRIESTESS_INSIGNIA_THREE
      {
         iNum = Send(oCargo,@GetNumber);

         AddPacket(4,Send(oNPC,@GetCapDef), 4,Send(oNPC,@GetName),
                   4,Send(oNPC,@GetHimHer), 4,iNum, 4,Send(oCargo,@GetName),
                   4,Send(oNPC,@GetHeShe));

         return;
      }

      return;
   }

end
/////////////////////////////////////////////////////////////////////////////////
