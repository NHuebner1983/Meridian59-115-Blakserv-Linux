// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
AbstainPvPQuest is QuestTemplate
// Quest template QST_ID_ABSTAIN_PVP = 75.
// Quest nodes 217, 218.
// QNT_ID_ABSTAIN_PVP_ONE, QNT_ID_ABSTAIN_PVP_TWO

// QuestTemplate is
// [ quest template index
//   quest template object
//   number of players,
//   type of quest,
//   eligible player restrictions,
//   quest nodes,
//   max number active,
//   currently active quests,
//   percent chance of scheduling (on timer firing)
//   special restrictions ]

constants:

   include blakston.khd

resources:

   include abstainpvp.lkod

   // Quest description.
   abstainpvp_icon_rsc = rescuico.bgf
   abstainpvp_name_rsc = "abstain from PvP quest"
   abstainpvp_desc_rsc = \
      "If you are certain you wish to never engage in player versus player "
      "combat with this character, speak these words to the priestess of "
      "Shal'ille: \"I request that Shal'ille protect me from harm.\"."
      "\n\nWARNING: This is a permanent choice and cannot be undone!  If you "
      "choose this path you will be unable to engage in PvP, hold a soldier "
      "shield or future PvP-related items, enter guild halls or participate "
      "in Justicar elections."

   abstainpvp_completed_rsc = \
      "You are permamently safe from other players. You cannot attack them or "
      "be attacked, enter guild halls, participate in Justicar elections, hold "
      "a soldier shield or interact with faction flagpoles."

   // Quest resources.
   abstainpvp_trigger = "abstain from violence"
   abstainpvp_trigger_2 = "I request that Shal'ille protect me from harm"
   abstainpvp_assign = \
      "Shal'ille will protect you from the violence of combat with other "
      "adventurers. To obtain protection, you must speak these words aloud: "
      "\"~II request that Shal'ille protect me from harm.~I\"."
   abstainpvp_success = \
      "You have been blessed by Shal'ille, and are now permanently under "
      "her protection."
   abstainpvp_failure = "Subject: Your request for protection\n"
      "If you wish to obtain protection in the future, come speak to me again."

classvars:

   vrIcon = abstainpvp_icon_rsc
   vrName = abstainpvp_name_rsc
   vrDesc = abstainpvp_desc_rsc

   vrCompleted = abstainpvp_completed_rsc

   // The QST_ID constant for this quest.
   viQuestID = QST_ID_ABSTAIN_PVP

properties:

   piNumPlayers = 1
   piPlayerRestrict = \
      Q_PLAYER_NOTSUCCEEDED | Q_PLAYER_NOTFAILED_RECENTLY | Q_PLAYER_LAWFUL
   plSpecialRestrict = $
   piMaxPlayers = 3 // Don't need to schedule more.
   piSchedulePct = 100

messages:

   Constructor()
   {
      // Quest node list to send to QuestEngine.
      plQuestNodes = [QNT_ID_ABSTAIN_PVP_ONE, QNT_ID_ABSTAIN_PVP_TWO];

      if (Send(SETTINGS_OBJECT,@PvPOptOutEnabled))
      {
         piSchedulePct = 100;
      }
      else
      {
         piSchedulePct = 0;
      }

      propagate;
   }

   SendQuestNodeTemplates()
   {
      local oQE;

      oQE = Send(SYS,@GetQuestEngine);

      // Template #217 is abstain pvp quest
      // QNT_ID_ABSTAIN_PVP_ONE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #NPC_modifier=QN_NPCMOD_NONE,#cargolist=[ abstainpvp_trigger ],
               #quest_node_index=QNT_ID_ABSTAIN_PVP_ONE)
      {
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_ABSTAIN_PVP_ONE,
               #new_NPC_list=Send(Send(SYS,@GetLibrary),@GetOccupationList,
                                    #cNPC_class=&ShalillePriestess));
      }
      else
      {
         Debug("Error building QN: QNT_ID_ABSTAIN_PVP_ONE");
      }

      // Template #218 is abstain pvp quest
      // QNT_ID_ABSTAIN_PVP_TWO
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #NPC_modifier=QN_NPCMOD_SAME,#cargolist=[ abstainpvp_trigger_2 ],
               #prizelist=[ [ QN_PRIZETYPE_NO_PVP_FLAG ] ],
               #timelimit=300,#quest_node_index=QNT_ID_ABSTAIN_PVP_TWO)
      {
         Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_ABSTAIN_PVP_TWO,
               #new_hint=abstainpvp_assign);
         Send(oQE,@SetQuestNodeSuccessHint,#index=QNT_ID_ABSTAIN_PVP_TWO,
               #new_hint=abstainpvp_success);
         Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_ABSTAIN_PVP_TWO,
               #new_hint=abstainpvp_failure);
      }
      else
      {
         Debug("Error building QN: QNT_ID_ABSTAIN_PVP_TWO");
      }

      return;
   }

end
/////////////////////////////////////////////////////////////////////////////////
