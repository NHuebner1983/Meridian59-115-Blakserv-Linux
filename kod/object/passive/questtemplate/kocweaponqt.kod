// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


/////////////////////////////////////////////////////////////////////////////////
KocWeaponQuest is QuestTemplate
// Quest template QST_ID_KOC_WEAPON_TRADE = 54.
// Quest nodes 165, 166, 167.
// QNT_ID_KOC_WEAP_TRADE_ONE, QNT_ID_KOC_WEAP_TRADE_TWO,
// QNT_ID_KOC_WEAP_TRADE_THREE

// QuestTemplate is
// [ quest template index
//   quest template object
//   number of players,
//   type of quest,
//   eligible player restrictions,
//   quest nodes,
//   max number active,
//   currently active quests,
//   percent chance of scheduling (on timer firing)
//   special restrictions ]

constants:

   include blakston.khd

resources:

   include kocweaponqt.lkod

   // Quest description.
   kocweaponqt_icon_rsc = arrowqt.bgf
   kocweaponqt_name_rsc = "Ko'catan weapon trade quest"
   kocweaponqt_desc_rsc = \
      "Make a delivery of arrows to the mainland."

   kocweaponqt_nodetwo_rsc = \
      "%s%s needs a guaranteed delivery made to the mainland.  This is "
      "government business, so failure to deliver would be punished.  Will "
      "you accept these terms?"

   kocweaponqt_nodethree_rsc = \
      "Deliver %i %s to %s%s, to supply %s faction troops.  Do not be tempted "
      "to keep the supplies for yourself; thievery will be punished."

   kocweaponqt_completed_rsc = \
      "You have completed the Ko'catan weapon trade quest."

   // Quest resources.
   kocweapon_assign_2 = \
      "I need a guaranteed delivery made to the mainland.  It's government "
      "business, so failure to deliver it would result in outlaw status.  Are "
      "you willing to accept these terms?"
   kocweapon_assign_2_h = "I need a guaranteed delivery made to the mainland.  "
      "It's government business, so failure to deliver it would result in "
      "misfortune.  Are you willing to accept these terms?"
   kocweapon_failure_2 = \
      "Subject: I shall seek another courier\n"
      "I understand your reluctance to commit yourself to such a long "
      "journey.  Thank you anyway."
   kocweapon_assign_3 = \
      "%NPC has requested my services for %HIMHER_NPC to supply the faction's "
      "troops, but unfortunately I have no one to take the supplies to "
      "%HIMHER_NPC.  Here are %INDEF_CARGO%CARGO to be delivered;  I am "
      "sure that %NPC will pay your for your troubles.  Remember that you are "
      "bound by law to deliver the supplies, and  failure to deliver them "
      "will result in your being branded an outlaw.  For some reason I trust "
      "you, though."
   kocweapon_assign_3_h = \
      "%NPC has requested my services for %HIMHER_NPC to supply the faction's "
      "troops, but unfortunately I have no one to take the supplies to "
      "%HIMHER_NPC.  Here are %INDEF_CARGO%CARGO to be delivered;  I am "
      "sure that %NPC will pay your for your troubles.  Remember that you are "
      "bound by law to deliver the supplies, and failure to deliver them "
      "will result in misfortune.  For some reason I trust you, though."
   kocweapon_failure_3 = \
      "Subject: Thief!\n"
      "Your thievery has made you an outlaw by decree of %NPC."
   kocweapon_failure_3_h = \
      "Subject: Thief!\n"
      "The bad luck brought on by your evil deed shall now follow you "
      "wherever you go."
   kocweapon_success_3 = \
      "Thank you.  This is but the first delivery of many.  May it foster "
      "good trade relations for years to come.  Here, please take "
      "%INDEF_PRIZE%PRIZE."

classvars:

   vrIcon = kocweaponqt_icon_rsc
   vrName = kocweaponqt_name_rsc
   vrDesc = kocweaponqt_desc_rsc

   vrNodeTwo = kocweaponqt_nodetwo_rsc
   vrNodeThree = kocweaponqt_nodethree_rsc

   vrCompleted = kocweaponqt_completed_rsc

   // The QST_ID constant for this quest.
   viQuestID = QST_ID_KOC_WEAPON_TRADE

   viIcon_Animation_start = 1

properties:

   piNumPlayers = 1
   piPlayerRestrict = Q_PLAYER_NOTNEWBIE | Q_PLAYER_LAWFUL \
                      | Q_PLAYER_NOTTRIED_RECENTLY
   plSpecialRestrict = $
   piMaxPlayers = 6
   piSchedulePct = 50

messages:

   Constructor()
   {
      // Quest node list to send to QuestEngine.
      plQuestNodes = [QNT_ID_KOC_WEAP_TRADE_ONE, QNT_ID_KOC_WEAP_TRADE_TWO,
                      QNT_ID_KOC_WEAP_TRADE_THREE];

      // Quest nodes with matching descriptions for the player.
      plQuestNodeDesc = [ [QNT_ID_KOC_WEAP_TRADE_TWO, vrNodeTwo],
                          [QNT_ID_KOC_WEAP_TRADE_THREE, vrNodeThree] ];

      propagate;
   }

   SendQuestNodeTemplates()
   {
      local lNPCs, oNPC, oQE, oLib;

      oQE = Send(SYS,@GetQuestEngine);
      oLib = Send(SYS,@GetLibrary);

      // Template #165 is kocatan weapon trade quest, say "need a courier"
      // QNT_ID_KOC_WEAP_TRADE_ONE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #NPC_modifier=QN_NPCMOD_NONE,#cargolist=[ letter_trigger ],
               #quest_node_index=QNT_ID_KOC_WEAP_TRADE_ONE)
      {
         lNPCs = $;
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&KocatanBowMaker)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_KOC_WEAP_TRADE_ONE,
               #new_NPC_list=lNPCs);
      }
      else
      {
         Debug("Error building QN: QNT_ID_KOC_WEAP_TRADE_ONE");
      }

      // Template #166 is kocatan weapon trade quest, say "yes"
      // QNT_ID_KOC_WEAP_TRADE_TWO
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #NPC_modifier=QN_NPCMOD_SAME,#cargolist=[ chess_trigger ],
               #timelimit=2 * 60,#quest_node_index=QNT_ID_KOC_WEAP_TRADE_TWO)
      {
         // Happy land subs.
         if NOT Send(SYS,@IsPKAllowed)
         {
            Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_KOC_WEAP_TRADE_TWO,
                  #new_hint=kocweapon_assign_2_h);
         }
         else
         {
            Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_KOC_WEAP_TRADE_TWO,
                  #new_hint=kocweapon_assign_2);
         }
         Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_KOC_WEAP_TRADE_TWO,
               #new_hint=kocweapon_failure_2);
      }
      else
      {
         Debug("Error building QN: QNT_ID_KOC_WEAP_TRADE_TWO");
      }

      // Template #167 is kocatan weapon trade quest
      // QNT_ID_KOC_WEAP_TRADE_THREE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_ITEMCLASS,
               #NPC_modifier=QN_NPCMOD_NONE,
               #cargolist=[ [ QN_PRIZETYPE_ITEMCLASS, &Arrow, 100 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &NeruditeArrow, 50 ] ],
               #prizelist=[[[ QN_PRIZETYPE_ITEMCLASS, &InkyCap, 10 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &Emerald, 6 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &IdentifyWand, 1 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &PurifyWand, 1 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &ResistColdPotion, 1 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &ResistFirePotion, 1 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &ResistMagicPotion, 1 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &ResistPoisonPotion, 1 ],
                            [ QN_PRIZETYPE_ITEMCLASS, &ResistShockPotion, 1 ] ] ],
               #penaltylist=[ [ QN_PRIZETYPE_OUTLAW ] ],
               #timelimit=4 * 3600,#quest_node_index=QNT_ID_KOC_WEAP_TRADE_THREE)
      {
         lNPCs = $;
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&PrincessLiege)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&DukeLiege)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_KOC_WEAP_TRADE_THREE,
               #new_NPC_list=lNPCs);

         // Happy land subs.
         if NOT Send(SYS,@IsPKAllowed)
         {
            Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_KOC_WEAP_TRADE_THREE,
                  #new_hint=kocweapon_assign_3_h);
            Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_KOC_WEAP_TRADE_THREE,
                  #new_hint=kocweapon_failure_3_h);
         }
         else
         {
            Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_KOC_WEAP_TRADE_THREE,
                  #new_hint=kocweapon_assign_3);
            Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_KOC_WEAP_TRADE_THREE,
                  #new_hint=kocweapon_failure_3);
         }
         Send(oQE,@SetQuestNodeSuccessHint,#index=QNT_ID_KOC_WEAP_TRADE_THREE,
               #new_hint=kocweapon_success_3);
      }
      else
      {
         Debug("Error building QN: QNT_ID_KOC_WEAP_TRADE_THREE");
      }

      return;
   }

   ExtraDesc(index=$,oQuestNode=$)
   {
      local iNum, oCargo, oDestNPC;

      if oQuestNode = $
         OR index = $
      {
         return;
      }

      oDestNPC = Send(oQuestNode,@GetDestNPC);

      if index = QNT_ID_KOC_WEAP_TRADE_TWO
      {
         AddPacket(4,Send(oDestNPC,@GetCapDef), 4,Send(oDestNPC,@GetName));
      }

      if index = QNT_ID_KOC_WEAP_TRADE_THREE
      {
         oCargo = Send(oQuestNode,@GetCargo);
         iNum = Send(oCargo,@GetNumber);

         AddPacket(4,iNum, 4,Send(oCargo,@GetName), 4,Send(oDestNPC,@GetDef),
                   4,Send(oDestNPC,@GetName), 4,Send(oDestNPC,@GetHisHer));
      }

      return;
   }

end
/////////////////////////////////////////////////////////////////////////////////
