// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


/////////////////////////////////////////////////////////////////////////////////
FactionInsigniaQuest is QuestTemplate
// Quest template QST_ID_FACTION_INSIGNIA = 35.
// Quest nodes 106, 107, 108, 109.
// QNT_ID_FACTION_INSIGNIA_ONE, QNT_ID_FACTION_INSIGNIA_TWO,
// QNT_ID_FACTION_INSIGNIA_THREE, QNT_ID_FACTION_INSIGNIA_FOUR

// QuestTemplate is
// [ quest template index
//   quest template object
//   number of players,
//   type of quest,
//   eligible player restrictions,
//   quest nodes,
//   max number active,
//   currently active quests,
//   percent chance of scheduling (on timer firing)
//   special restrictions ]

constants:

   include blakston.khd

resources:

   include factioninsigniaqt.lkod

   // Quest description.
   factioninsigniaquest_icon_rsc = gsha.bgf
   factioninsigniaquest_name_rsc = "herald shield insignia quest"
   factioninsigniaquest_desc_rsc = \
      "Your liege will place its insignia on your shield, provided "
      "you complete a \"mission\" for them."

   factioninsigniaquest_nodetwo_rsc = \
      "%s%s will place %s insignia on your herald shield, provided you "
      "complete a \"mission\" for %s."

   factioninsigniaquest_nodethree_rsc = \
      "%s%s has asked you to go to %s and ask them about %s.  Return to "
      "%s when you are done, and let %s know what %s has said to you."

   factioninsigniaquest_nodefour_rsc = \
      "When questioned, %s said \"%s\".  Return to %s and inform %s of "
      "what was told to you."

   factioninsigniaquest_completed_rsc = \
      "You have received an insignia on your herald shield, which adds "
      "more power to your spells when worn."

   // Quest resources.
   factioninsignia_trigger = "insignia"
   factioninsignia_assign_2 = \
      "I see you have a shield with colors, but no insignia.  If you "
      "would care to earn mine, I have a mission for you."
   factioninsignia_trigger_2 = "mission"
   factioninsignia_assign_3 = \
      "In the midst of this political chaos, subjects openly consort against "
      "me.  Fortunately, I have spies in place which keep an eye on their "
      "connivings.  Reportedly, %NPC has been conferring with %CARGO, and I "
      "am naturally quite intrigued by whatever they talked about.  Do me a "
      "favor, mention that person’s name to our friend %NPC, and repeat for "
      "me word for word what is told to you."
   factioninsignia_trigger_3a = "Esseldi"
   factioninsignia_trigger_3b = "Drechx"
   factioninsignia_trigger_3c = "Bei Naq"
   factioninsignia_trigger_3d = "Cylill"
   factioninsignia_trigger_3e = "Alzahakar"
   factioninsignia_trigger_3f = "Priestess Qerti'nya"
   factioninsignia_trigger_3g = "Priestess Xiana"
   factioninsignia_trigger_3h = "Jonas d’Accor"
   factioninsignia_failure_3 = \
      "Subject: Insignia mission\n"
      "My disappointment is profound.  I had thought that certainly, you "
      "would be more reliable than the common thugs and unreliable swine "
      "that make up my spy network.  Apparently, you are below them."
   factioninsignia_assign_4 = "%CARGO."
   factioninsignia_trigger_4a = \
      "Uh... I don’t really know what you're talking about"
   factioninsignia_trigger_4b = \
      "An outstanding citizen.  It's been a while since we last had a good talk"
   factioninsignia_trigger_4c = \
      "Ah, yes!  We were just chatting about what a fine job the "
      "Princess is doing"
   factioninsignia_trigger_4d = \
      "Ah, yes!  We were just chatting about what a fine job the Duke is doing"
   factioninsignia_trigger_4e = \
      "That jerk took everything I owned in a game of Zoxila just last week"
   factioninsignia_trigger_4f = \
      "Who?  The name doesn't sound familiar"
   factioninsignia_success_4 = \
      "Hmmm, fascinating.  I will have my spies scry further, but your "
      "information has provided the insight that I required.  Here, please "
      "accept my insignia as a token of my appreciation."
   factioninsignia_failure_4 = \
      "Subject: Insignia mission\n"
      "I'm afraid you've failed the little test your liege and I "
      "concocted.  As we had expected, your loyalty is questionable."

classvars:

   vrIcon = factioninsigniaquest_icon_rsc
   vrName = factioninsigniaquest_name_rsc
   vrDesc = factioninsigniaquest_desc_rsc

   vrNodeTwo = factioninsigniaquest_nodetwo_rsc
   vrNodeThree = factioninsigniaquest_nodethree_rsc
   vrNodeFour = factioninsigniaquest_nodefour_rsc

   vrCompleted = factioninsigniaquest_completed_rsc

   // The QST_ID constant for this quest.
   viQuestID = QST_ID_FACTION_INSIGNIA

   viIcon_Animation_start = 1

properties:

   piNumPlayers = 1
   piPlayerRestrict = Q_PLAYER_NOTTRIED_RECENTLY | Q_PLAYER_FACTION_SAME
   piMaxPlayers = 40
   piSchedulePct = 100
   piTimeLimit = 12 * 3600 // 12 hours.

messages:

   Constructor()
   {
      // Quest node list to send to QuestEngine.
      plQuestNodes = [QNT_ID_FACTION_INSIGNIA_ONE,
                      QNT_ID_FACTION_INSIGNIA_TWO,
                      QNT_ID_FACTION_INSIGNIA_THREE,
                      QNT_ID_FACTION_INSIGNIA_FOUR];

      // Quest nodes with matching descriptions for the player.
      plQuestNodeDesc = [ [QNT_ID_FACTION_INSIGNIA_TWO, vrNodeTwo],
                          [QNT_ID_FACTION_INSIGNIA_THREE, vrNodeThree],
                          [QNT_ID_FACTION_INSIGNIA_FOUR, vrNodeFour] ];

      plSpecialRestrict = [ [ Q_R2_HAS_ITEM, &GuildShield ] ];

      propagate;
   }

   SendQuestNodeTemplates()
   {
      local lNPCs, oNPC, oQE, oLib;

      oQE = Send(SYS,@GetQuestEngine);
      oLib = Send(SYS,@GetLibrary);

      // Template #106 is faction insignia quest
      // QNT_ID_FACTION_INSIGNIA_ONE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #cargolist=[ factioninsignia_trigger ],
               #quest_node_index=QNT_ID_FACTION_INSIGNIA_ONE)
      {
         lNPCs = $;
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&Factions,
                           #onIsland=FALSE)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_FACTION_INSIGNIA_ONE,
               #new_NPC_list=lNPCs);
      }
      else
      {
         Debug("Error building QN: QNT_ID_FACTION_INSIGNIA_ONE");
      }

      // Template #107 is faction insignia quest
      // QNT_ID_FACTION_INSIGNIA_TWO
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #NPC_modifier=QN_NPCMOD_SAME,#cargolist=[factioninsignia_trigger_2],
               #timelimit=60,#quest_node_index=QNT_ID_FACTION_INSIGNIA_TWO)
      {
         Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_FACTION_INSIGNIA_TWO,
               #new_hint=factioninsignia_assign_2);
      }
      else
      {
         Debug("Error building QN: QNT_ID_FACTION_INSIGNIA_TWO");
      }

      // Template #108 is faction insignia quest
      // QNT_ID_FACTION_INSIGNIA_THREE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #cargolist=[ factioninsignia_trigger_3a,
                            factioninsignia_trigger_3b,
                            factioninsignia_trigger_3c,
                            factioninsignia_trigger_3d,
                            factioninsignia_trigger_3e,
                            factioninsignia_trigger_3f,
                            factioninsignia_trigger_3g],
               #timelimit=2 * 3600,#quest_node_index=QNT_ID_FACTION_INSIGNIA_THREE)
      {
         lNPCs = $;
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&TosTown)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&BarloqueTown)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&CorNothTown)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&MarionTown)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         foreach oNPC in Send(oLib,@GetOccupationList,#cNPC_class=&JasperTown)
         {
            lNPCs = Cons(oNPC, lNPCs);
         }
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_FACTION_INSIGNIA_THREE,
               #new_NPC_list=lNPCs);
         Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_FACTION_INSIGNIA_THREE,
               #new_hint=factioninsignia_assign_3);
         Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_FACTION_INSIGNIA_THREE,
               #new_hint=factioninsignia_failure_3);
      }
      else
      {
         Debug("Error building QN: QNT_ID_FACTION_INSIGNIA_THREE");
      }

      // Template #109 is faction insignia quest
      // QNT_ID_FACTION_INSIGNIA_FOUR
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #NPC_modifier=QN_NPCMOD_PREVIOUS,
               #cargolist=[ factioninsignia_trigger_4a,
                            factioninsignia_trigger_4b,
                            factioninsignia_trigger_4c,
                            factioninsignia_trigger_4d,
                            factioninsignia_trigger_4e,
                            factioninsignia_trigger_4f ],
               #prizelist=[ [ QN_PRIZETYPE_INSIGNIA ] ],
               #timelimit=2 * 3600,#quest_node_index=QNT_ID_FACTION_INSIGNIA_FOUR)
      {
         Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_FACTION_INSIGNIA_FOUR,
               #new_hint=factioninsignia_assign_4);
         Send(oQE,@SetQuestNodeSuccessHint,#index=QNT_ID_FACTION_INSIGNIA_FOUR,
               #new_hint=factioninsignia_success_4);
         Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_FACTION_INSIGNIA_FOUR,
               #new_hint=factioninsignia_failure_4);
      }
      else
      {
         Debug("Error building QN: QNT_ID_FACTION_INSIGNIA_FOUR");
      }

      return;
   }

   ExtraDesc(index=$,oQuestNode=$)
   {
      local oCargo, oSourceNPC, oDestNPC, rSourceName, rDestName;

      if oQuestNode = $
         OR index = $
      {
         return;
      }

      oSourceNPC = Send(oQuestNode,@GetSourceNPC);

      if oSourceNPC = $
      {
         return;
      }

      if index = QNT_ID_FACTION_INSIGNIA_TWO
      {
         AddPacket(4,Send(oSourceNPC,@GetCapDef), 4,Send(oSourceNPC,@GetName),
                   4,Send(oSourceNPC,@GetHisHer),4,Send(oSourceNPC,@GetHimHer));

         return;
      }

      // oCargo is a resource.
      oCargo = Send(oQuestNode,@GetCargo);

      oDestNPC = Send(oQuestNode,@GetDestNPC);
      if oCargo = $
         OR oDestNPC = $
      {
         return;
      }

      if index = QNT_ID_FACTION_INSIGNIA_THREE
      {
         rDestName = Send(oDestNPC,@GetName);
         rSourceName = Send(oSourceNPC,@GetName);

         AddPacket(4,Send(oSourceNPC,@GetCapDef), 4,rSourceName, 4,rDestName,
                   4,oCargo, 4,rSourceName, 4,Send(oSourceNPC,@GetHimHer),
                   4,rDestName);

         return;
      }

      if index = QNT_ID_FACTION_INSIGNIA_FOUR
      {
         AddPacket(4,Send(oSourceNPC,@GetName), 4,oCargo,
                   4,Send(oDestNPC,@GetName), 4,Send(oDestNPC,@GetHimHer));

         return;
      }

      return;
   }

end
/////////////////////////////////////////////////////////////////////////////////
