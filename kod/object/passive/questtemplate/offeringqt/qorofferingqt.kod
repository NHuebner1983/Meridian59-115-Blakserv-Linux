// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


/////////////////////////////////////////////////////////////////////////////////
QorOfferingQuest is OfferingQuestTemplate
// Quest template QST_ID_QOR_OFFERING = 26
// Quest nodes 63, 64, 65, 66, 67.
// QNT_ID_QOR_OFFERING_ONE, QNT_ID_QOR_OFFERING_TWO, QNT_ID_QOR_OFFERING_THREE
// QNT_ID_QOR_OFFERING_FOUR, QNT_ID_QOR_OFFERING_FIVE

// QuestTemplate is
// [ quest template index
//   quest template object
//   number of players,
//   type of quest,
//   eligible player restrictions,
//   quest nodes,
//   max number active,
//   currently active quests,
//   percent chance of scheduling (on timer firing)
//   special restrictions ]

constants:

   include blakston.khd

resources:

   include qorofferingqt.lkod

   // Quest description.
   qorofferingqt_icon_rsc = bloodinn.bgf
   qorofferingqt_name_rsc = "Qor offering quest"
   qorofferingqt_desc_rsc = \
      "Priestess Zuxana has invited you to chant with her, to give strength "
      "to your Mistress."

   qorofferingqt_completed = \
      "You have given part of your life essence in order to strengthen "
      "your Mistress.  In return, you have received a powerful magical "
      "item.  When placed at one of the Shrines located around the "
      "world, the Shrine will be dedicated to Qor and her spells "
      "will have more power."

   // Quest resources.
   qoroffering_assign_2 = \
      "`r%NAME, dark devotee of our Mistress of the Bloody Moon, will "
      "you give of yourself so that your Mistress may be stronger?"
   qoroffering_assign_3 = \
      "`rWorship with me, then.  Together, we will draw upon our own life "
      "essence to birth a symbol of our Mistress' power.  Rarely are the "
      "stars so well aligned for the dark ritual we shall undertake, so we "
      "must speak quickly.  Incant these words with me: %CARGO"
   qoroffering_trigger_3 = \
      "By the light of a bloody moon, I summon thee, Qor, Mistress of the Dark"
   qoroffering_failure_3 = \
      "Subject: Fool!\n"
      "The window of time has passed, and now we have both suffered for "
      "your hesitation.  The ritual begun but left unfinished has drawn away "
      "a piece of our power.  I am not pleased with you, worm."
   qoroffering_assign_4 = "`r%CARGO!"
   qoroffering_success_5 = \
      "`rAh, this is a great day for Qor!  Go now, carry forth the power "
      "of our Mistress into the world!"

classvars:

   vrIcon = qorofferingqt_icon_rsc
   vrName = qorofferingqt_name_rsc
   vrDesc = qorofferingqt_desc_rsc

   vrCompleted = qorofferingqt_completed

   // The QST_ID constant for this quest.
   viQuestID = QST_ID_QOR_OFFERING

   viIcon_Animation_start = 1

properties:

   piPlayerRestrict = Q_PLAYER_NOTTRIED_RECENTLY | Q_PLAYER_KARMA_EVIL \
                      | Q_PLAYER_NOTNEWBIE

messages:

   Constructor()
   {
      // Quest node list to send to QuestEngine.
      plQuestNodes = [QNT_ID_QOR_OFFERING_ONE, QNT_ID_QOR_OFFERING_TWO,
                      QNT_ID_QOR_OFFERING_THREE, QNT_ID_QOR_OFFERING_FOUR,
                      QNT_ID_QOR_OFFERING_FOUR, QNT_ID_QOR_OFFERING_FOUR,
                      QNT_ID_QOR_OFFERING_FIVE];

      // Quest nodes with matching descriptions for the player.
      // No description needed for quest node QNT_ID_SHAL_DISCIPLE_ONE.
      plQuestNodeDesc = [ [QNT_ID_QOR_OFFERING_TWO, vrAccept],
                          [QNT_ID_QOR_OFFERING_THREE, vrChant],
                          [QNT_ID_QOR_OFFERING_FOUR, vrChant],
                          [QNT_ID_QOR_OFFERING_FIVE, vrChant] ];

      plSpecialRestrict = [ [ Q_R2_HAS_SPELL_SCHOOL, SS_QOR, 15 ] ];

      propagate;
   }

   SendQuestNodeTemplates()
   {
      local oQE, oLib;

      oQE = Send(SYS,@GetQuestEngine);
      oLib = Send(SYS,@GetLibrary);

      // Template #63 is qor offering quest kickoff
      // QNT_ID_QOR_OFFERING_ONE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_SHOWUP,
               #quest_node_index=QNT_ID_QOR_OFFERING_ONE)
      {
         Send(oQE,@SetQuestNodeNPCList,#index=QNT_ID_QOR_OFFERING_ONE,
               #new_NPC_list=Send(oLib,@GetOccupationList,
                     #cNPC_class=&QorPriestess));
      }
      else
      {
         Debug("Error building QN: QNT_ID_QOR_OFFERING_ONE");
      }

      // Template #64 is qor offering quest, say "yes"
      // QNT_ID_QOR_OFFERING_TWO
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #NPC_modifier=QN_NPCMOD_SAME,#cargolist=[offering_trigger_2],
               #timelimit=piTimeLimit,#quest_node_index=QNT_ID_QOR_OFFERING_TWO)
      {
         Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_QOR_OFFERING_TWO,
               #new_hint=qoroffering_assign_2);
      }
      else
      {
         Debug("Error building QN: QNT_ID_QOR_OFFERING_TWO");
      }

      // Template #65 is qor offering quest, incant
      // QNT_ID_QOR_OFFERING_THREE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #NPC_modifier=QN_NPCMOD_SAME,#cargolist=[qoroffering_trigger_3],
               #prizelist=[ [QN_PRIZETYPE_BOON, QN_PRIZE_BOON_MYSTICISM , -4, 4 ],
                            [QN_PRIZETYPE_BOON, QN_PRIZE_BOON_MYSTICISM , -1, 7 ] ],
               #penaltylist=[ [QN_PRIZETYPE_BOON, QN_PRIZE_BOON_MYSTICISM , -5, 2 ] ],
               #timelimit=piTimeLimit,#quest_node_index=QNT_ID_QOR_OFFERING_THREE)
      {
         Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_QOR_OFFERING_THREE,
               #new_hint=qoroffering_assign_3);
         Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_QOR_OFFERING_THREE,
               #new_hint=qoroffering_failure_3);
      }
      else
      {
         Debug("Error building QN: QNT_ID_QOR_OFFERING_THREE");
      }

      // Template #66 is qor offering quest, incant
      // QNT_ID_QOR_OFFERING_FOUR
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #NPC_modifier=QN_NPCMOD_SAME,#cargolist=[qoroffering_trigger_3],
               #prizelist=[ [QN_PRIZETYPE_BOON, QN_PRIZE_BOON_MYSTICISM , -4, 4 ],
                            [QN_PRIZETYPE_BOON, QN_PRIZE_BOON_MYSTICISM , -1, 7 ] ],
               #penaltylist=[ [QN_PRIZETYPE_BOON, QN_PRIZE_BOON_MYSTICISM , -5, 2 ] ],
               #timelimit=piTimeLimit,#quest_node_index=QNT_ID_QOR_OFFERING_FOUR)
      {
         Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_QOR_OFFERING_FOUR,
               #new_hint=qoroffering_assign_4);
         Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_QOR_OFFERING_FOUR,
               #new_hint=qoroffering_failure_3);
      }
      else
      {
         Debug("Error building QN: QNT_ID_QOR_OFFERING_FOUR");
      }

      // Template #67 is qor offering quest, incant
      // QNT_ID_QOR_OFFERING_FIVE
      if Send(oQE,@AddQuestNodeTemplate,#questnode_type=QN_TYPE_MESSAGE,
               #NPC_modifier=QN_NPCMOD_SAME,#cargolist=[qoroffering_trigger_3],
               #prizelist=[ [ QN_PRIZETYPE_ITEMCLASS, &OfferingQor, 1 ],
                            [ QN_PRIZETYPE_BOON, QN_PRIZE_BOON_MYSTICISM , -4, 4 ],
                            [ QN_PRIZETYPE_BOON, QN_PRIZE_BOON_MYSTICISM , -1, 7 ] ],
               #penaltylist=[ [QN_PRIZETYPE_BOON, QN_PRIZE_BOON_MYSTICISM , -5, 2 ] ],
               #timelimit=piTimeLimit,#quest_node_index=QNT_ID_QOR_OFFERING_FIVE)
      {
         Send(oQE,@SetQuestNodeAssignHint,#index=QNT_ID_QOR_OFFERING_FIVE,
               #new_hint=qoroffering_assign_4);
         Send(oQE,@SetQuestNodeSuccessHint,#index=QNT_ID_QOR_OFFERING_FIVE,
               #new_hint=qoroffering_success_5);
         Send(oQE,@SetQuestNodeFailureHint,#index=QNT_ID_QOR_OFFERING_FIVE,
               #new_hint=qoroffering_failure_3);
      }
      else
      {
         Debug("Error building QN: QNT_ID_QOR_OFFERING_FIVE");
      }

      return;
   }

end
/////////////////////////////////////////////////////////////////////////////////
