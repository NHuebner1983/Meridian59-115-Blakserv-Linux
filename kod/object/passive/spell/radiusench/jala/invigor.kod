// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


/////////////////////////////////////////////////////////////////////////////////
Invigorate is Jala

constants:

   include blakston.khd

resources:

   include invigor.lkod

   Invigorate_name_rsc = "invigorate"
   Invigorate_icon_rsc = iinvigor.bgf
   Invigorate_desc_rsc = \
      "This song allows all listeners to regain vigor at an accelerated rate.  "
      "Requires nothing but a strong voice."

   Invigorate_song = song11.ogg

   Invigorate_cast = "You begin to play an invigorating song."
   Invigorate_starts = "%s begins to play an invigorating song."
   Invigorate_ends = "The invigorating song played by %s fades away."
   Invigorate_caster_ends = "Your invigorating song fades."
   Invigorate_caster_enter = "You feel the tiredness of your muscles diminish."
   Invigorate_enter = "%s's invigorating song eases the tiredness of your muscles."
   Invigorate_leave = "You can no longer hear the invigorating notes of %s's song."

classvars:

   radius_ench_cast = Invigorate_cast
   radius_ench_starts = Invigorate_starts
   radius_ench_ends = Invigorate_ends
   radius_ench_caster_ends = Invigorate_caster_ends
   radius_ench_caster_enter = Invigorate_caster_enter
   radius_ench_enter = Invigorate_enter
   radius_ench_leave = Invigorate_leave

   vrName = Invigorate_name_rsc
   vrIcon = Invigorate_icon_rsc
   vrDesc = Invigorate_desc_rsc

   viSpell_num = SID_INVIGORATE
   viSchool = SS_JALA
   viSpell_level = 1

   viMana = 5           // Mana is amount used upon inititiation
   viManaDrain = 1      // Drain is amount used every viDrainTime milliseconds
   viDrainTime = 5000   // Drain some mana every viDrainTime milliseconds

   viPeriodicEffect = TRUE

   viSpellExertion = 1
   viChance_To_Increase = 20
   viMeditate_ratio = 10

   viAffectsEveryone = TRUE

properties:

   prMusic = Invigorate_song
      
messages:

   ResetReagents()
   {
      plReagents = $;

      return;
   }

   CalculatePeriodicEffectTime(iPower=0)
   {
      return 100000 / (iPower+1);
   }

   PeriodicEffect(lEnchanted=$,iPower=0,iRange=0,source=$)
   {
      local oUser, lState;
      
      foreach oUser in lEnchanted
      {
         if IsClass(oUser,&User)
         {
            lState = Send(oUser,@GetMostPowerfulRadiusEnchantmentState,#byClass=&Invigorate);
            
            if Nth(lState,3) = source
               AND Nth(lState,2) = iPower
            {
               Send(oUser,@RestAddExertion,#amount=-1000);
            }
         }
      }
      
      return;
   }


end
////////////////////////////////////////////////////////////////////////////////
