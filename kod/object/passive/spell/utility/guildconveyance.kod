// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
GuildConveyance is UtilitySpell

constants:

   include blakston.khd

resources:

   include guildconveyance.lkod

   GuildConveyance_name_rsc = "guild conveyance"
   GuildConveyance_icon_rsc = iconveyance.bgf
   GuildConveyance_desc_rsc = \
      "Sends any item to your guild hall chest.  "
      "Requires only a moment of your precious time."
   GuildConveyance_cant = "You cannot convey %s%s to your guild hall chest."
   GuildConveyance_chest_full = "Your guild chest can't hold anymore items."
   GuildConveyance_not_holding = \
      "The item must be in your inventory first."
   GuildConveyance_cast = \
      "A guild squire has delivered %s%s to your guild hall chest for safe keeping."

   GuildConveyance_not_guilded = "You must be guilded to cast guild conveyance."
   GuildConveyance_rank_too_low = "You are not high enough rank to access your guild hall chest."
   GuildConveyance_no_hall = "Your guild does not own a hall. Perhaps you should complain to your guild master."
	  
classvars:

   vrName = GuildConveyance_name_rsc
   vrIcon = GuildConveyance_icon_rsc
   vrDesc = GuildConveyance_desc_rsc

   viCast_time = 0

   viSpell_num = SID_GUILDCONVEYANCE
   viSpell_level = 1
   viSchool = SS_KRAANAN
   viMana = 0
   viSpellExertion = 0
   viChance_To_Increase = 15

properties:

messages:

   ResetReagents()
   {
      plReagents = $;

      return;
   }

   GetNumSpellTargets()
   {
      return 1;
   }

   CanPayCosts(who = $)
   {
      local oGuild;

      if (who = $
         OR NOT IsClass(who,&User))
      {
         return FALSE;
      }

      if (Send(who,@CheckPlayerFlag,#flag=PFLAG_PERMA_NO_PVP))
      {
         Send(who,@MsgSendUser,#message_rsc=spell_no_pvp_flag);

         return FALSE;
      }

      oGuild = Send(who,@GetGuild);

      if oGuild = $
      {
         Send(who,@MsgSendUser,#message_rsc=GuildConveyance_not_guilded);

         return FALSE;
      }

      if Send(oGuild,@GetRank,#who=who) = RANK_APPRENTICE
      {
         Send(who,@MsgSendUser,#message_rsc=GuildConveyance_rank_too_low);

         return FALSE;
      }

      if Send(oGuild,@GetGuildHall) = $
      {
         Send(who,@MsgSendUser,#message_rsc=GuildConveyance_no_hall);

         return FALSE;
      }

      propagate;
   }
   
   CastSpell(who = $, lTargets = $)
   {
      local i, oTarget, oGuild, oGuildHall, oBox, bAtLeastOneBoxFound, bSuccess;

      if (lTargets = $)
      {
         return;
      }

      oTarget = First(lTargets);

      if (oTarget = $)
      {
         return;
      }

      if NOT Send(oTarget,@CanBeStoredInVault)
         OR IsClass(oTarget,&Money)
      {
         Send(who,@MsgSendUser,#message_rsc=GuildConveyance_cant,
               #parm1=Send(oTarget,@GetDef),#parm2=Send(oTarget,@GetName));

         return;
      }

      if NOT Send(who,@IsHolding,#what=oTarget)
      {
         Send(who,@MsgSendUser,#message_rsc=GuildConveyance_not_holding);

         return;
      }

	  // Get the player's guild
      oGuild = Send(who,@GetGuild);
	  
	  // Get the player's hall
	  oGuildHall = Send(oGuild,@GetGuildHall);
	  
	  // Whether or not the conveyance was successful...
	  bSuccess = FALSE;
	  
	  // Whether or not we found a guild hall chest...
	  bAtLeastOneBoxFound = FALSE;
	  
	  foreach i in Send(oGuildHall,@GetHolderActive)
      {
         oBox = First(i);
		 
         if oBox <> $ AND IsClass(oBox,&StorageBox)
         {
			bAtLeastOneBoxFound = TRUE;
			
			if Send(oBox,@ReqNewHold,#what=oTarget,#who=who,#IsConveyance=TRUE)
			{
				Send(oBox,@NewHold,#what=oTarget);
				
				bSuccess = TRUE;
				
				break;
			}
		 }
	  }

	  if bSuccess 
	  {
		Send(who,@MsgSendUser,#message_rsc=GuildConveyance_cast,
		   #parm1=Send(oTarget,@GetDef),#parm2=Send(oTarget,@GetName));
	  }
	  else
	  {
		 if bAtLeastOneBoxFound
		 {
			// All chests are full
			Send(who,@MsgSendUser,#message_rsc=GuildConveyance_chest_full);
		 }
		 else
		 {
			Send(who,@MsgSendUser,#message_rsc=GuildConveyance_cant,
				#parm1=Send(oTarget,@GetDef),#parm2=Send(oTarget,@GetName));		  
		 }
	  }
      propagate;
   }

   SuccessChance(who=$)
   "Starter spell will always work."
   {
      return TRUE;
   }

end
////////////////////////////////////////////////////////////////////////////////
