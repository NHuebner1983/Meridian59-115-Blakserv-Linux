// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
Shroud is ItemEnchantment

constants:
   include blakston.khd

resources:

   include shroud.lkod

   shroud_cast_rsc = "A dark cloak settles over your %s."
   
   shroud_fails = "%s%s is strangely unaffected by the spell."
   
   shroud_name_rsc = "shroud"
   shroud_icon_rsc = ishroud.bgf
   shroud_desc_rsc = \
      "Used to protect a warrior's tools against polluting magics.  "
      "Requires two mushrooms and two elderberries to cast."

   shroud_label_rsc = "Shrouder"

classvars:

   vrName = shroud_name_rsc
   vrIcon = shroud_icon_rsc
   vrDesc = shroud_desc_rsc

   vrEnchantment_type = shroud_label_rsc

   viSpell_num = SID_SHROUD
   viSchool = SS_KRAANAN

   viSpell_level = 3
   viMana = 10
   viSpellExertion = 3
   viCast_time = 6000

   viChance_To_Increase = 25

properties:

messages:

   ResetReagents()
   {
      plReagents = $;
      plReagents = Cons([&Mushroom,2],plReagents);
      plReagents = Cons([&Elderberry,2],plReagents);

      return;
   }

   CanPayCosts(who=$,lTargets=$)
   {
      local oWeapon, oTarget;

      if lTargets = $
      {
         return FALSE;
      }

      oTarget = First(lTargets);

      // Check that target is an item
      if (NOT IsClass(oTarget,&Item)
         OR (NOT Send(oTarget,@CanEnchant,#oSpell=self)))
      {
         Send(who,@MsgSendUser,#message_rsc=shroud_fails,
               #parm1=Send(oTarget,@GetCapDef),#parm2=Send(oTarget,@GetName));

        return FALSE;
      }

      propagate;   // Check other things higher up
   }

   CastSpell(who=$,lTargets=$,iSpellPower=0)
   {
      local iCurrentSpell, oItem, oItemAtt;

      oItem = First(lTargets);

      if NOT Send(oItem,@CanEnchant,#oSpell=self)
      {
         Send(who,@MsgSendUser,#message_rsc=spell_resists,
               #parm1=Send(oItem,@GetCapDef),#parm2=Send(oItem,@GetName));

         return;
      }

      oItemAtt = Send(SYS,@FindItemAttByNum,#num=IA_SHROUD);
      iCurrentSpell = Send(oItem,@GetAttributeData,#ItemAtt=IA_SHROUD);

      if iCurrentSpell <> $
      {
         Send(oItemAtt,@RemoveFromItem,#oItem=oItem);
      }

      Send(oItemAtt,@AddToItem,#oItem=oItem,
            #timer_duration = Send(self,@GetDuration,#iSpellPower=iSpellPower),
            #iPower=Random(iSpellPower/20,iSpellPower/10));

      Send(who,@MsgSendUser,#message_rsc=shroud_cast_rsc,
            #parm1=Send(oItem,@GetName),
            #state3=Send(self,@GetMakerInfo,#who=who));

      propagate;
   }

end
////////////////////////////////////////////////////////////////////////////////