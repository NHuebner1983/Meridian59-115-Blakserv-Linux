// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
ItemAttBonded is ItemAttribute
///////////////////////////////////////////////////////////////////////
//
//   This item is bonded to a player.
//
//   Form is:
//
//      [IA_BONDED, oPlayer]
//
//      oPlayer::the player to which this item is bonded.
//
///////////////////////////////////////////////////////////////////////

constants:

   include blakston.khd

resources:

   include iabonded.lkod

ItemAttBonded_desc = ""

classvars:

   viItem_Att_Num = IA_BONDED
   vrDesc = ItemAttBonded_desc

properties:

messages:

////////////////////////////////////////////////
///
///  Effect Functions
///
///////////////////////////////////////////////

   InitiallyIdentified(random_gen=FALSE)
   {
      return TRUE;
   }

   ItemCanIdentify()
   {
      return FALSE;
   }

////////////////////////////////////////////////////
///
///  Infrastructure
///  (Adding and removing a ItemAtt from an item.)
///
////////////////////////////////////////////////////

   AddToItem(oItem=$,oPlayer=$,identified=FALSE)
   {
      local lData, iValue;

      lData = $;

      lData = Cons(oPlayer,lData);

      iValue = Send(self,@SetCompound,#oItem=oItem,#iPower=0);
      lData = Cons(iValue,lData);

      Send(oItem,@AddAttributeSpecifics,#lItemAtt=lData);

      // Add the magic flag to the item (colored name in lists).
      Send(oItem,@AddMagicFlag);

      return;
   }

   RemoveFromItem(oItem=$)
   "This must be called.  In fact, this is what all attribute "
   "removing things should call."
   {
      local lData;
      lData = Send(oItem,@GetAttributeData,#ItemAtt = viItem_Att_num);
      if lData <> $
      {
         Send(Nth(lData,2),@ClearBondedItem);
      }
      Send(oItem,@RemoveAttributeSpecifics,#oItemAtt=self,#ItemAtt=viItem_Att_num);

      return;
   }

   AddEffects(oItem=$,lData=$,oPlayer=$)
   "AddEffects, in general, does anything that is triggered upon creation, "
   "including changing the stats of the Item's wielder/wearer, or changing "
   "some part of the item's stats.\n"   
   "This should be tailored for each Attribute."
   {
      return;
   }

   RemoveEffects(oItem = $, lData = $)
   "This simply undoes whatever AddEffects does."
   {
      // remove IA_APPEND_DESCRIPTION label if there are no more quest attributes?
      // for now, leave it on.
      return;
   }

////////////////////////////////////////////////
///
///  Maintenance Functions
///
////////////////////////////////////////////////

   AppendDesc(oItem=$)
   {
      return;
   }

/////////////////////////////////////////////////
///
///	Treasure Functions
///
/////////////////////////////////////////////////

   AddToTreasureTable()
   {
      return;
   }

   CanBeSpoofed()
   {
      return FALSE;
   }

/////////////////////////////////////////////////
///
///  Name Functions
///
/////////////////////////////////////////////////

   ItemBuildDescName(oItem=$)
   {
      //Addpacket(4,vrName);
      Addpacket(4,Send(oItem,@GetName));
      return;
   }

   IsMagicalEffect()
   {
      return TRUE;
   }

end
////////////////////////////////////////////////////////////////////////////////
