// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
WeapAttPunisher is WeaponAttribute

///////////////////////////////////////////////////////////////////////
//
//   This weapon has a 2x bonus against murderers, 1.5x bonus against outlaws,
//   and a -1x bonus against all other players.
//   Also, outlaws and murderers may not wield this weapon.  They get wounded
//   if they try.
//
//   Form is:
//
//      [ WA_PUNISHER ]
//
///////////////////////////////////////////////////////////////////////

constants:

   include blakston.khd

resources:

   include wapunish.lkod

   weapattpunisher_desc = \
      "  The emblem of a fist holding an ankh rests in the pommel of "
      "this weapon, promising %s advantage in the fight for justice."
   punisher_fail_use = \
      "As you grab the hilt of %s%s, you scream out in pain and let go!"
   weapattpunisher_name = "%s of the just"
   punisher_dm = "punisher"

classvars:

   vrDesc = weapattpunisher_desc
   vbPowerDesc = TRUE
   viItem_Att_Num = WA_PUNISHER
   viDifficulty = 7
   vrName = weapattpunisher_name
   vrDM_trigger = punisher_dm
   vbAppears_in_Happyland = FALSE

properties:

messages:

////////////////////////////////////////////////
///
///  Initialization Functions
///
////////////////////////////////////////////////

   InitialPower(oItem=$)
   {
      if oItem = $
      {
         Debug("This shouldn't have happened!");

         return;
      }

      return Send(self,@InitialWeaponPower,#oItem=oItem);
   }

////////////////////////////////////////////////
///
///  Effect Functions
///
////////////////////////////////////////////////

   ModifyDamage(damage=0,target=$,wielder=$,lData=$)
   "Wielder gets a damage bonus, equal to (proficiency/4) - 2."
   {
      local iNum, iPower;

      // Here, iNum = power itself.
      iPower = Send(self,@TranslatePowerFromCompound,#iCompound=First(lData));
      iPower = Send(self,@DecipherDamageFromPower,#iPower=iPower);

      if target <> $
      {
         /// No special effects for monsters
         if IsClass(target,&Monster)
         {
            return Damage;
         }

         // Double standard effect on murderers.
         if Send(target,@CheckPlayerFlag,#flag = PFLAG_MURDERER)
         {
            return (damage + ((iPower*3)/2));
         }

         // One and one half effect on outlaws.
         if send(target,@CheckPlayerFlag,#flag = PFLAG_OUTLAW)
         {
            return (damage + iPower);
         }
      }

      return damage;    /// No extra damage against monsters.
   }

   ModifyHitRoll(hitroll=0,target=$,wielder=$,lData= $)
   "Wielder gets a hit bonus based on whether or not the target is a "
   "murderer or outlaw."
   {
      local iNum, iPower;

      // Here, iNum = power itself.
      iPower = Send(self,@TranslatePowerFromCompound,#iCompound=first(lData));
      iPower = Send(self,@DecipherHitRollFromPower,#iPower=iPower);

      // No special effects for monsters.
      if target <> $
      {
         if IsClass(target,&Monster)
         {
            return hitroll;
         }

         // Double standard effect on murderers.
         if Send(target,@CheckPlayerFlag,#flag = PFLAG_MURDERER)
         {
            return (hitroll + ((iPower*3)/2));
         }

         // One and one half effect on outlaws.
         if Send(target,@CheckPlayerFlag,#flag = PFLAG_OUTLAW)
         {
            return (hitroll + iPower);
         }
      }

      // Return normal hitroll
      return hitroll;
   }

   ItemReqUse(oItem=$,oPlayer=$)
   "Murderers and Outlaws may not use.  In fact, they are wounded "
   "if they even try."
   {
      local lUsing, bUsingAmulet, oUsedItem;

      lUsing = Send(oPlayer,@GetPlayerUsing);
      bUsingAmulet = FALSE;

      foreach oUsedItem in lUsing
      {
         if IsClass(oUsedItem,&NecromancerAmulet)
         {
            bUsingAmulet = TRUE;

            break;
         }
      }

      if Send(oPlayer,@CheckPlayerFlag,#flag = PFLAG_MURDERER)
         OR send(oPlayer,@CheckPlayerFlag,#flag = PFLAG_OUTLAW)
         OR bUsingAmulet
      {
         Send(oPlayer, @MsgSendUser, #message_rsc = punisher_fail_use,
              #parm1=send(oItem,@GetDef),#parm2=send(oItem,@GetName));

         if Send(oPlayer,@AssessDamage,#what=self,
               #damage=Random(3,7),#report=False) = $
         {
            // we killed someone off... heh heh heh
            Send(Send(oPlayer,@GetOwner),@SomethingKilled,
                  #what=self,#victim=oPlayer);
            Send(oPlayer,@Killed,#what=oItem);
            Send(oItem,@Delete);
         }

         /// this person is a murderer and may not wield it.
         return FALSE;
      }

      return TRUE;
   }

   IsMagicalEffect()
   {
      return TRUE;
   }

end
////////////////////////////////////////////////////////////////////////////////
