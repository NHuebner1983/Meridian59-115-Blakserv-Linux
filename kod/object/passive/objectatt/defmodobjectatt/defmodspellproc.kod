// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
DefModSpellProc is DefModObjectAttribute 

constants:

   include blakston.khd

   SELF_CAST_TYPE = 1
   ATTACKER_CAST_TYPE = 2
   NO_TARGET_CAST_TYPE = 3

resources:

   include defmodspellproc.lkod

   defmod_proc = \
      "The %s worn by %s gives off a magical flare, casting %s on %s!"
   defmod_proc_you = "Your %s gives off a magical flare, casting %s on you!"
   defmod_proc_them = "Your %s gives off a magical flare, casting %s on %s!"
   defmod_proc_nobody = "Your %s gives off a magical flare, casting %s!"
   defmod_proc_no_target = \
      "The %s worn by %s gives off a magical flare, casting %s!"
   defspellproc_attribute_desc = \
      "\n\nWhen defending against a strike, the runes engraved on this %s "
      "will cast %s %s with %i spellpower %i%% of the time."
   def_attribute_self_rsc = "on you"
   def_attribute_target_rsc = "on the enemy"

classvars:

properties:

   poSpell = $
   piType = SELF_CAST_TYPE
   piSpellPower = 70
   piProcChance = 15

messages:

   Constructor(host_object=$,set_spell=$,set_type=1,set_spellpower=1,set_proc_chance=0)
   {
      local iRandomSpell;

      if set_spell <> $
      {
         poSpell = set_spell;
         piType = set_type;
         piSpellPower = set_spellpower;
         piProcChance = set_proc_chance;
         propagate;
      }

      if host_object = $
      {
         propagate;
      }

      iRandomSpell = Random(1,100);

      if IsClass(host_object,&Shield)
      {
         if iRandomSpell < 25
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_MAGIC_SHIELD);
            piType = Random(1,2);
            piSpellPower = Random(1,99);
            piProcChance = Random(10,20);
            propagate;
         }
         if iRandomSpell < 50
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_DEFLECT);
            piType = Random(1,2);
            piSpellPower = Random(1,99);
            piProcChance = Random(15,25);
            propagate;
         }
         if iRandomSpell < 75
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_BLINK);
            piType = 3;
            piSpellPower = Random(1,99);
            piProcChance = Random(5,20);
            propagate;
         }
         if iRandomSpell <= 100
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_CURE_POISON);
            piType = 1;
            piSpellPower = Random(1,99);
            piProcChance = Random(20,45);
            propagate;
         }
      }

      if IsClass(host_object,&Pants)
      {
         if iRandomSpell < 50
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_HASTE);
            piType = Random(1,2);
            piSpellPower = Random(1,99);
            piProcChance = Random(1,3);
            propagate;
         }
         if iRandomSpell < 100
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_REMOVE_CURSE);
            piType = 1;
            piSpellPower = Random(1,99);
            piProcChance = Random(1,3);
            propagate;
         }
         if iRandomSpell = 100
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_SPIRITUAL_HAMMER);
            piType = 3;
            piSpellPower = Random(1,99);
            piProcChance = Random(1,3);
            propagate;
         }
      }

      if IsClass(host_object,&Helmet)
      {
         if iRandomSpell < 25
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_DETECT_INVISIBLE);
            piType = 1;
            piSpellPower = Random(1,99);
            piProcChance = Random(5,15);
            propagate;
         }
         if iRandomSpell < 50
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_EAGLE_EYES);
            piType = Random(1,2);
            piSpellPower = Random(1,99);
            piProcChance = Random(5,15);
            propagate;
         }
         if iRandomSpell < 75
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_NIGHT_VISION);
            piType = 1;
            piSpellPower = 99;
            piProcChance = Random(5,20);
            propagate;
         }
         if iRandomSpell <= 100
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_DISPEL_ILLUSION);
            piType = 3;
            piSpellPower = Random(1,99);
            piProcChance = Random(1,5);
         }
      }

      if IsClass(host_object,&Armor)
      {
         if iRandomSpell < 35
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_SHADOW_FORM);
            piType = Random(1,2);
            piSpellPower = Random(1,99);
            piProcChance = Random(10,20);
            propagate;
         }
         if iRandomSpell < 45
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_RESIST_ACID);
            piType = Random(1,2);
            piSpellPower = Random(1,99);
            piProcChance = Random(5,10);
            propagate;
         }
         if iRandomSpell < 55
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_RESIST_COLD);
            piType = Random(1,2);
            piSpellPower = Random(1,99);
            piProcChance = Random(5,10);
            propagate;
         }
         if iRandomSpell < 65
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_RESIST_FIRE);
            piType = Random(1,2);
            piSpellPower = Random(1,99);
            piProcChance = Random(5,10);
            propagate;
         }
         if iRandomSpell < 75
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_RESIST_SHOCK);
            piType = Random(1,2);
            piSpellPower = Random(1,99);
            piProcChance = Random(5,10);
            propagate;
         }
         if iRandomSpell < 95
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_FREE_ACTION);
            piType = Random(1,2);
            piSpellPower = Random(1,99);
            piProcChance = Random(5,15);
            propagate;
         }
         if iRandomSpell < 100
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_EARTHQUAKE);
            piType = NO_TARGET_CAST_TYPE;
            piSpellPower = Random(1,99);
            piProcChance = Random(5,10);
            propagate;
         }
         if iRandomSpell = 100
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_ARMOR_OF_GORT);
            piType = SELF_CAST_TYPE;
            piSpellPower = Random(1,99);
            piProcChance = Random(1,5);
            propagate;
         }
      }

      if IsClass(host_object,&ShirtBase)
      {
         if iRandomSpell < 33
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_SUPER_STRENGTH);
            piType = Random(1,2);
            piSpellPower = Random(1,99);
            piProcChance = Random(3,6);
            propagate;
         }
         if iRandomSpell < 66
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_BLESS);
            piType = Random(1,2);
            piSpellPower = Random(1,99);
            piProcChance = Random(3,6);
            propagate;
         }
         if iRandomSpell <= 100
         {
            poSpell = Send(SYS,@FindSpellByNum,#num=SID_RESIST_POISON);
            piType = 1;
            piSpellPower = Random(1,99);
            piProcChance = Random(6,10);
            propagate;
         }
      }

      propagate;
   }

   GetSpell()
   {
      return poSpell;
   }

   GetType()
   {
      return piType;
   }

   GetSpellpower()
   {
      return piSpellPower;
   }

   GetProcChance()
   {
      return piProcChance;
   }

   ModifyDefenseDamage(who = $,what = $,damage = $,atype = 0,aspell = 0)
   {
      local i, each_obj, oRoom;

      if who = $
      {
         return damage;
      }

      oRoom = Send(who,@GetOwner);

      if poSpell <> $
         AND Random(1,100) <= piProcChance
      {
         if piType = SELF_CAST_TYPE
            AND NOT Send(who,@IsEnchanted,#what=poSpell)
         {
            foreach i in Send(oRoom,@GetHolderActive)
            {
               each_obj = Send(oRoom,@HolderExtractObject,#data=i);
               if IsClass(each_obj,&Player)
                  AND each_obj <> who
               {
                  Post(each_obj,@MsgSendUser,#message_rsc=defmod_proc,
                        #parm1=Send(Send(self,@GetHostObject),@GetName),
                        #parm2=Send(who,@GetName),#parm3=Send(poSpell,@GetName),
                        #parm4=Send(who,@GetHimHer));
               }
               if IsClass(each_obj,&Player)
                  AND each_obj = who
               {
                  Post(each_obj,@MsgSendUser,#message_rsc=defmod_proc_you,
                        #parm1=Send(Send(self,@GetHostObject),@GetName),
                        #parm2=Send(poSpell,@GetName));
               }
            }
            Post(poSpell,@CastSpell,#who=who,#ltargets=[who],
                  #iSpellPower=piSpellPower,#bItemCast=TRUE);
         }

         // IsEnchanted check skipped so that the proc can replace enemy
         // buffs with weaker versions. For example, a Qor player may wish
         // to proc a weaker Eagle Eyes on an enemy that is hitting them.
         if piType = ATTACKER_CAST_TYPE
            AND what <> $
            AND IsClass(what,&Player)
         {
            foreach i in Send(oRoom,@GetHolderActive)
            {
               each_obj = Send(oRoom,@HolderExtractObject,#data=i);
               if IsClass(each_obj,&Player)
                  AND each_obj <> who
               {
                  Post(each_obj,@MsgSendUser,#message_rsc=defmod_proc,
                        #parm1=Send(Send(self,@GetHostObject),@GetName),
                        #parm2=Send(who,@GetName),#parm3=Send(poSpell,@GetName),
                        #parm4=Send(what,@GetName));
               }
               if IsClass(each_obj,&Player)
                  AND each_obj = who
               {
                  Post(each_obj,@MsgSendUser,#message_rsc=defmod_proc_them,
                        #parm1=Send(Send(self,@GetHostObject),@GetName),
                        #parm2=Send(poSpell,@GetName),
                        #parm3=Send(what,@GetName));
               }
            }
            Post(poSpell,@CastSpell,#who=who,#ltargets=[what],
                  #iSpellPower=piSpellPower,#bItemCast=TRUE);
         }

         if piType = NO_TARGET_CAST_TYPE
            AND NOT (aspell & ATCK_SPELL_QUAKE)
         {
            foreach i in Send(oRoom,@GetHolderActive)
            {
               each_obj = Send(oRoom,@HolderExtractObject,#data=i);
               If IsClass(each_obj,&Player)
                  AND each_obj <> who
               {
                  Post(each_obj,@MsgSendUser,#message_rsc=defmod_proc,
                        #parm1=Send(Send(self,@GetHostObject),@GetName),
                        #parm2=Send(who,@GetName),#parm3=Send(poSpell,@GetName));
               }
               if IsClass(each_obj,&Player)
                  AND each_obj = who
               {
                  Post(each_obj,@MsgSendUser,#message_rsc=defmod_proc_nobody,
                        #parm1=Send(Send(self,@GetHostObject),@GetName),
                        #parm2=Send(poSpell,@GetName));
               }
            }
            Post(poSpell,@CastSpell,#who=who,
                  #ltargets=Send(poSpell,@GetTargets,#who=who),
                  #iSpellPower=piSpellPower,#bItemCast=TRUE);
         }
      }

      return damage;
   }

   AttributeDesc()
   {
      local target_type;

      target_type = Send(self,@GetType);
      if target_type = 1
      {
         AddPacket(4,defspellproc_attribute_desc, 4,Send(poHostObject,@GetName),
                   4,Send(Send(self,@GetSpell),@GetName),4,def_attribute_self_rsc,
                   4,Send(self,@GetSpellPower),4,Send(self,@GetProcChance));
      }
      else if target_type = 2
      {
         AddPacket(4,defspellproc_attribute_desc, 4,Send(poHostObject,@GetName),
                   4,Send(Send(self,@GetSpell),@GetName),4,def_attribute_target_rsc,
                   4,Send(self,@GetSpellPower),4,Send(self,@GetProcChance));
      }

      return;
   }

end
////////////////////////////////////////////////////////////////////////////////
