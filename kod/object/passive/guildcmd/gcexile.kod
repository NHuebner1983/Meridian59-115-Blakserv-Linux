// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
GuildExile is GuildCommand

constants:

   include blakston.khd
   include protocol.khd

resources:

   include gcexile.lkod

   guildexile_name_rsc = "exile"
   guildexile_icon_rsc = light.bgf
   guildexile_desc_Rsc = \
      "Use this to kick someone out of your guild.  Will not affect those "
      "of other guilds, or those of higher rank than you."

   exile_non_user = \
      "%s%s doesn't seem at all hurt by your cold-hearted rejection."
   exile_not_member = "%s%s is not a member of %s%q!"

   exile_cant_self = \
      "You may not exile yourself - use the renounce command instead."
   exile_cant_self_gm = \
      "A %s must first abdicate his position before he leaves the guild."
   exile_cant_too_high = \
      "You may not exile someone unless they are of a lower rank than yourself."

   exile_to_exiled = "~B%s has expelled you from the ranks of %s%q!"
   exile_to_others = "~B%s has exiled %q from the ranks of %s%q!"

   guildexile_necro_nak = \
      "~BEvery member of The Order is bound by a blood oath.  The only way "
      "out is death."

classvars:

   vrName = guildexile_name_rsc
   vrIcon = guildexile_icon_rsc
   vrDesc = guildexile_desc_rsc

   viIndefinite = ARTICLE_NONE
   viDefinite = ARTICLE_NONE

   viGuildcommand_num = GCID_EXILE
   viRank_needed = RANK_LIEUTENANT

   viNecro_enabled = FALSE

properties:

messages:

   GetNumSpellTargets()
   {
      return 1;
   }

   DoCommand(who=$, otarget = $)
   "Kicks the target out of the guild!"
   {
      local yourGuild,myguild,i,lmembers;

      if NOT IsClass(oTarget,&player)
      {
         Send(who,@MsgSendUser,#message_rsc=exile_non_user,
               #parm1=Send(oTarget,@GetCapDef),#parm2=Send(oTarget,@GetName));

         return FALSE;
      }

      yourGuild = Send(oTarget,@GetGuild);
      myGuild = Send(who,@GetGuild);

      if yourGuild <> myGuild or yourGuild = $
      {
         Send(who,@MsgSendUser,#message_rsc=exile_not_member,
               #parm1=Send(oTarget,@GetDef),#parm2=Send(oTarget,@GetName),
               #parm3=Send(myGuild,@GetDef),#parm4=Send(myGuild,@GetName));

         return FALSE;
      }

      if oTarget = who
      {
         if Send(myGuild,@GetRank,#who=who) = RANK_MASTER
         {
            Send(who,@MsgSendUser,#message_rsc=exile_cant_self_GM,
                  #parm1=Send(myGuild,@GetRankName,#rank=RANK_MASTER,
                  #sex=Send(who,@GetGender)));
         }
         else
         {
            Send(who,@MsgSendUser,#message_rsc=exile_cant_self);
         }

         return FALSE;
      }

      if Send(myGuild,@GetRank,#who=who) <= Send(myGuild,@GetRank,#who=oTarget)
      {
         Send(who,@MsgSendUser,#message_rsc=exile_cant_too_high);

         return FALSE;
      }

      if IsClass(myGuild,&NecromancerGuild)
      {
         Send(who,@MsgSendUser,#message_rsc=guildexile_necro_nak);

         return FALSE;
      }

      Send(myGuild,@RemoveFromGuild,#who=oTarget);

      Send(oTarget,@MsgSendUser,#message_rsc=exile_to_exiled,
            #parm1=Send(who,@GetTrueName),#parm2=Send(myguild,@GetDef),
            #parm3=Send(myguild,@GetTrueName));

      foreach i in Send(myGuild,@GetMemberList)
      {
          Send(First(i),@MsgSendUser,#message_rsc=exile_to_others,
               #parm1=Send(who,@GetTrueName),#parm2=Send(oTarget,@GetTrueName),
               #type2=STRING_RESOURCE,#parm3=Send(myguild,@GetDef),
               #parm4=Send(myguild,@GetName));
      }

      propagate;
   }

end
////////////////////////////////////////////////////////////////////////////////
